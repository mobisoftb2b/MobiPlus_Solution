var rowCount; var readinessAlert = { rowCount: 0 }; readinessAlert.Init = function () { }; readinessAlert.CreateReadinessAlertGrid = function (a) { var b; if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") b = "rtl"; else b = "ltr" } $("#divReadinessAlert").block({ css: { border: "0px" }, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); $("#tblReadinessAlert").jqGrid({ direction: b, datatype: function (b) { readinessAlert.getReadinessAlertData(a) }, height: 300, colNames: [$("#hidReadinessAlert_Grid_Job_Name").text(), $("#hidReadinessAlert_Grid_TrainingEventTypeName").text(), $("#hidReadinessAlert_Grid_TrainingEventCategoryName").text(), $("#hidReadinessAlert_Grid_Quantity4Period").text(), $("#hidReadinessAlert_Grid_MinQuantity4Period").text(), "", "", "Job_ID", "TrainingEventType_ID", "TrainingEventCategory_ID"], colModel: [{ name: "Job_Name", index: "Job_Name", sortable: true, sorttype: "text", width: 220 }, { name: "TrainingEventType_Name", index: "TrainingEventType_Name", sortable: true, sorttype: "text", width: 180 }, { name: "TrainingEventCategory_Name", index: "TrainingEventCategory_Name", sortable: true, sorttype: "text", width: 180 }, { name: "Quantity4Period", index: "Quantity4Period", sorttype: "int", sortable: true, align: "center", width: 120 }, { name: "MinQuantity4Period", index: "MinQuantity4Period", sortable: true, sorttype: "int", align: "center", width: 100 }, { name: "EditAlert", index: "EditAlert", sortable: false, edittype: "image", formatter: editFormatter, width: 35, align: "center" }, { name: "DelAlert", index: "DelAlert", sortable: false, edittype: "image", formatter: deleteFormatter, width: 45, align: "center" }, { name: "Job_ID", hidden: "true" }, { name: "TrainingEventType_ID", hidden: "true" }, { name: "TrainingEventCategory_ID", hidden: "true"}], viewrecords: true, sortorder: "asc", autoencode: false, loadonce: false, pginput: true, altRows: true, hoverrows: false, toolbar: [true, "top"], recordpos: b == "rtl" ? "left" : "right", pager: "#pgrReadinessAlert", pgbuttons: false, pginput: false, gridComplete: function () { $(this).setGridParam({ datatype: "local", selarrrow: "false" }); if (rowCount == $(this).getGridParam("records")) { $("#waitplease").css({ display: "none" }); $("#divReadinessAlert").unblock() } }, onCellSelect: function (a, b, c, d) { switch (b) { case 5: readinessAlert.DefineReadinessAlert_Open($(this).getRowData(a)); break; case 6: return readinessAlert.DefineReadinessAlert_Delete($(this).getRowData(a)); break } return false }, ondblClickRow: function (a, b, c, d) { readinessAlert.DefineReadinessAlert_Open($(this).getRowData(a)) } }); $("#tblReadinessAlert").jqGrid("gridResize", { minWidth: 750, minHeight: 300 }).toolbarButtonAdd("#t_tblReadinessAlert", { caption: $("#hidReadinessAlert_btnAddReadinessAlert").text(), position: "first", align: b == "rtl" ? "right" : "left", buttonicon: "ui-icon-circle-plus", onClickButton: function () { readinessAlert.DefineReadinessAlert_New() } }).jqGrid("sortGrid", "TrainingEventType_Name", true) }; readinessAlert.getReadinessAlertData = function (a) { PQ.Admin.WebService.AlertSettingService.ReadinessAlert_Select(a, function (a, b) { readinessAlert.ReceivedReadinessAlertData(JSON.parse(getMain(a)).rows) }, function (a, b) { return false }) }; readinessAlert.ReceivedReadinessAlertData = function (a) { var b = $("#tblReadinessAlert"); b.clearGridData(); rowCount = a.length; if (!rowCount) $("#divReadinessAlert").unblock(); for (var c = 0; c < a.length; c++) b.addRowData(c + 1, a[c]) }; readinessAlert.DefineReadinessAlert_New = function () { $("#ddlJobs").val("0").show(); $("#txtJobs").val("").hide(); $("#ddlTrainingEventType").val("0").show(); $("#txtTrainingEventType").val("").hide(); $("#ddlEventCategory").val("0").show(); $("#txtEventCategory").val("").hide(); $("#txtQuantity4Period").val(""); $("#txtMinQuantuty4Period").val(""); $("#txtThresholdLevelInDays").val(""); $("#txtGraceInDay").val(""); $("#txtNumOfFailures4Alert").val(""); $("#ddlPerfomanceLevel").val("0"); $("#txtQuality").val(""); $("#txtTotalScore").val("0"); $("#btnAddReadinessAlert").val($("#lblReadinessAlert_btnAddAlert").text()); $("#chkCumulativeQuantity").attr("checked", false); divReadinessAlertDetails_Open() }; readinessAlert.DefineReadinessAlert_Open = function (a) { if (a) { var b = { Job_ID: a.Job_ID, TrainingEventType_ID: a.TrainingEventType_ID, TrainingEventCategory_ID: a.TrainingEventCategory_ID }; $("#btnAddReadinessAlert").val($("#lblReadinessAlert_btnUpdate").text()); PQ.Admin.WebService.AlertSettingService.TrainingEventsBar_Select(b, function (a) { if (a) { $("#ddlJobs").val(a.Job_ID).hide(); $("#txtJobs").val($("#ddlJobs option:selected").text()).show(); $("#ddlTrainingEventType").val(a.TrainingEventType_ID).hide(); $("#txtTrainingEventType").val(a.TrainingEventType_Name).show(); $("#ddlEventCategory").val(a.TrainingEventCategory_ID).hide(); $("#txtEventCategory").val(a.TrainingEventCategory_Name).show(); $("#hidTrainingEventCategoryID").val(a.TrainingEventCategory_ID); $("#chkCumulativeQuantity").attr("checked", a.isCumulativeQuantity == null ? false : a.isCumulativeQuantity); if (a.isCumulativeQuantity) { $("#txtQuantity4Period").val("").attr("readonly", true); $("#txtMinQuantuty4Period").val("").attr("readonly", true) } else { $("#txtQuantity4Period").val(a.Quantity4Period).removeAttr("readonly"); $("#txtMinQuantuty4Period").val(a.MinQuantity4Period).removeAttr("readonly") } $("#txtThresholdLevelInDays").val(a.ThresholdLevelInDays); $("#txtGraceInDay").val(a.GraceInDays); $("#txtNumOfFailures4Alert").val(a.NumOfFailures4Alert); $("#ddlPerfomanceLevel").val(a.ThresholdExecutionLevel == null ? "0" : a.ThresholdExecutionLevel); $("#txtQuality").val(a.ThresholdQuantity); $("#txtTotalScore").val(a.ThresholdScore) } divReadinessAlertDetails_Open() }, function (a) { return false }) } }; readinessAlert.DefineReadinessAlert_Save = function () { if (readinessAlert.ReadinessAlertRequaredFields()) { $("#waitplease").css({ display: "block" }); var a = { Job_ID: $("#ddlJobs").val(), TrainingEventType_ID: $("#ddlTrainingEventType").val(), TrainingEventCategory_ID: $("#ddlEventCategory").val() == "0" ? $("#hidTrainingEventCategoryID").val() : $("#ddlEventCategory").val(), Quantity4Period: $("#txtQuantity4Period").val(), MinQuantity4Period: $("#txtMinQuantuty4Period").val(), ThresholdLevelInDays: $("#txtThresholdLevelInDays").val(), GraceInDays: $("#txtGraceInDay").val(), NumOfFailures4Alert: $("#txtNumOfFailures4Alert").val(), ThresholdQuantity: $("#txtQuality").val(), ThresholdScore: $("#txtTotalScore").val(), ThresholdExecutionLevel: $("#ddlPerfomanceLevel").val(), isCumulativeQuantity: $("#chkCumulativeQuantity").attr("checked") }; PQ.Admin.WebService.AlertSettingService.TrainingEventsBar_Save(a, function (a) { if (a) { $("#tblReadinessAlert").GridUnload(); readinessAlert.CreateReadinessAlertGrid({ Job_ID: $("#ddlJobsList").val() }); $("#waitplease").css({ display: "none" }); $("#divReadinessAlertDetails").dialog("destroy") } }, function (a) { $("#waitplease").css({ display: "none" }); return false }) } }; readinessAlert.PopulateTrainingEventCategoryCombo = function (a) { $("#ddlEventCategory>option").remove(); PQ.Admin.WebService.AlertSettingService.TrainingEventCategory_Select(a, $("#hidReportsParam_GrtTrainingEventCategory").text(), function (a) { $(a).each(function () { $("#ddlEventCategory").append($("<option></option>").val(this["TrainingEventCategory_ID"]).html(this["TrainingEventCategory_Name"])) }); $("#ddlEventCategory").removeClass("ui-autocomplete-ddl-loading") }, function (a) { return false }) }; readinessAlert.ReadinessAlertRequaredFields = function () { var a = new Boolean(true); if ($("#ddlJobs").val() == "0") { $("#ddlJobs").addClass("ui-state-error"); return false } else { $("#ddlJobs").removeClass("ui-state-error", 500); a = true } if ($("#ddlTrainingEventType").val() == "0") { $("#ddlTrainingEventType").addClass("ui-state-error"); return false } else { $("#ddlTrainingEventType").removeClass("ui-state-error", 500); a = true } if ($("#ddlEventCategory").val() == "0" && $("#hidTrainingEventCategoryID").val() == "") { $("#ddlEventCategory").addClass("ui-state-error"); return false } else { $("#ddlEventCategory").removeClass("ui-state-error", 500); a = true } if ($("#txtThresholdLevelInDays").val() == "") { $("#txtThresholdLevelInDays").addClass("ui-state-error"); return false } else { $("#txtThresholdLevelInDays").removeClass("ui-state-error", 500); a = true } return a }; readinessAlert.DefineReadinessAlert_Delete = function (a) { if (a) { var b = { Job_ID: a.Job_ID, TrainingEventType_ID: a.TrainingEventType_ID, TrainingEventCategory_ID: a.TrainingEventCategory_ID }; $("#ConfirmDeleteAttachment").dialog({ autoOpen: true, modal: true, resizable: false, closeOnEscape: true, height: 150, open: function (a, b) { $(this).parent().appendTo("form") }, buttons: { Ok: function (a) { a.preventDefault(); $("#waitplease").css({ display: "block" }); try { PQ.Admin.WebService.AlertSettingService.TrainingEventsBar_Delete(b, function (a) { if (a) { $("#tblReadinessAlert").GridUnload(); readinessAlert.CreateReadinessAlertGrid({ Job_ID: $("#ddlJobsList").val() }); $("#waitplease").css({ display: "none" }); $("#ConfirmDeleteAttachment").dialog("destroy") } }, function (a) { $("#waitplease").css({ display: "none" }); $("#ConfirmDeleteAttachment").dialog("destroy"); return false }) } catch (a) { return false } return false }, Cancel: function (a) { a.preventDefault(); $(this).dialog("destroy"); return false } } }) } return false }