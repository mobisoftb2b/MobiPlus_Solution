var rowObject, attachment = { availableTags: null, rowObject: null, CreateAttachmentGrid: function () { var t, e = !1; $.cookie("lang") && (t = "he-IL" == $.cookie("lang") || "ar" == $.cookie("lang") ? "rtl" : "ltr"), $("#divPersonAttachments").block({ css: { border: "0px" }, timeout: 500, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }), $.cookie("userRole") && "6" == $.cookie("userRole") && (e = !0); var a = $("#tlbPersonAttachments").jqGrid({ direction: t, datatype: function (t) { attachment.getAdminTaskData(t) }, height: 375, autowidth: !1, colNames: [$("div span[id=hidEventRecordsFromDate]").text(), $("div span[id=hidRemarks]").text(), $("div span[id=hidEventRecordsEdit]").text(), $("div span[id=hidEventRecordsDelete]").text(), "PersonAttachments_ID", "RDS_PersonAttachments_FileName"], colModel: [{ name: "PersonAttachments_Timestamp", index: "PersonAttachments_Timestamp", formatter: "date", sortable: !0, sorttype: "date", width: 125 }, { name: "PersonAttachments_Name", index: "PersonAttachments_Name", sortable: !0, sorttype: "text", width: 490 }, { name: "EditAttach", index: "EditAdTask", sortable: !1, edittype: "image", formatter: attachFormatter, width: 32, align: "center" }, { name: "DelAttach", index: "DelAdTask", sortable: !1, hidden: e, edittype: "image", formatter: deleteFormatter, width: 45, align: "center" }, { name: "PersonAttachments_ID", hidden: "true", key: !0 }, { name: "RDS_PersonAttachments_FileName", hidden: "true"}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', datefmt: "d/m/Y", viewrecords: !0, sortorder: "asc", autoencode: !1, loadonce: !1, pginput: !0, recordpos: "left", toolbar: [!0, "top"], hoverrows: !1, altRows: !0, pager: "#pgrPersonAttachments", pgbuttons: !1, pginput: !1, gridComplete: function () { $(this).setGridParam({ datatype: "local", selarrrow: "false" }), $("#waitplease").css({ display: "none" }) }, onCellSelect: function (t, e, a, n) { switch (e) { case 2: attachment.ImgPreviewDocument_click($(this).getRowData(t)); break; case 3: return attachment.DeleteAttachmentItem($(this).getRowData(t)) } return !1 }, ondblClickRow: function (t, e, a, n) { attachment.ImgPreviewDocument_click($(this).getRowData(t)) } }); a.jqGrid("sortableRows"), a.jqGrid("gridResize", { minWidth: 674, minHeight: 300 }), "6" != $.cookie("userRole") && a.toolbarButtonAdd("#t_tlbPersonAttachments", { caption: $("#hidAttach_btnUpload").text(), position: "first", align: "rtl" == t ? "right" : "left", buttonicon: "ui-icon-circle-plus", onClickButton: function () { fileUpload_Open() } }), $("#waitplease").css({ display: "none" }) }, getAdminTaskData: function (t) { var e = getArgs(); e.eid && PQ.Admin.WebService.PQWebService.PersonAttachment_SelectAll(e.eid, function (t, e) { attachment.ReceivedAttachmentData(JSON.parse(attachment.getMain(t)).rows) }, function (t, e) { alert("An error has occured retrieving data!") }) }, ReceivedAttachmentData: function (t) { var e = $("#tlbPersonAttachments"); e.clearGridData(); for (var a = 0; a < t.length; a++) e.addRowData(a + 1, t[a]) }, getMain: function (t) { return t.hasOwnProperty("d") ? t.d : t }, DeleteAttachmentItem: function (t) { if (t) { var e = t.PersonAttachments_ID; $("#ConfirmDeleteAttachment").dialog({ autoOpen: !0, modal: !0, resizable: !1, closeOnEscape: !0, height: 150, open: function (t, e) { $(this).parent().appendTo("form") }, buttons: { Ok: function (t) { t.preventDefault(), $("#waitplease").css({ display: "block" }); try { PQ.Admin.WebService.PQWebService.RDS_PersonAttachments_Delete(e, function (t) { $("#tlbPersonAttachments").GridUnload(), attachment.CreateAttachmentGrid(), $("#waitplease").css({ display: "none" }), $("#ConfirmDeleteAttachment").dialog("destroy") }, this.ExecuteFailResult) } catch (t) { return !1 } return !1 }, Cancel: function (t) { return t.preventDefault(), $(this).dialog("destroy"), !1 } } }) } return !1 }, ImgPreviewDocument_click: function (t) { $("#waitplease").css({ display: "block" }); var e = t.PersonAttachments_ID; $("#hidPersonAttachmentsID").val(e), $("#btnReviewFile").click(), $("#waitplease").css({ display: "none" }) }, btnClosePopUp_Click: function () { $("#txtPersonAttachName").val(""), $("#txtPersonAttachName").hasClass("ui-state-error") && $("#txtPersonAttachName").removeClass("ui-state-error", 500), $("#divFileUpload").dialog("destroy") } };