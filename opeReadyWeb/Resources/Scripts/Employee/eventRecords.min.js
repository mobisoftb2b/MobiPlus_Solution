function deleteEventSubjects(e) { $(e).each(function () { $(this).append('<div class="click_to_close"></div>') }); $(".click_to_close").click(function () { var e = { TrainingEventCategory_ID: $(this).parent().attr("tecat"), TrainingEvent_ID: $(this).parent().attr("te") }; eventRecords.DeleteEventSubject(e, $(this).parent()) }) } function CreateAndPopulateEventRecordsGrid(e, t) { $("#waitplease").css({ display: "block" }); e = e == undefined ? null : e; var n; if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") n = "rtl"; else n = "ltr" } $("#tblEventHistory").jqGrid({ direction: n, datatype: function (t) { eventRecords.getEventRecordsData(t, e) }, height: 375, autowidth: false, colNames: [$("div span[id=hidEventRecordsFromDate]").text(), $("div span[id=hidEventType]").text(), $("div span[id=hidTrainingEventCategoryName]").text(), $("div span[id=hidReadinessLabel]").text(), $("div span[id=hidEventScore]").text(), $("div span[id=hidQuantity]").text(), $("div span[id=hidEventRecordsEdit]").text(), $("div span[id=hidEventRecordsDelete]").text(), "TrainingEvent_ID", "TrainingEventType_ID", "", "", "", ""], colModel: [{ name: "DateModificationSrt", index: "DateModificationSrt", formatter: "date", sortable: true, sorttype: "date", width: 100 }, { name: "TrainingEventType_Name", index: "TrainingEventType_Name", sortable: true, width: 200 }, { name: "TrainingEventCategory_Name", index: "TrainingEventCategory_Name", sortable: true, sorttype: "text", width: 200 }, { name: "ExecutionLevel_ORGName", index: "ExecutionLevel_ORGName", sortable: true, sorttype: "text", formatter: thresholdReadinessFormatter, width: 130 }, { name: "TrainingEvent2Person_Score", index: "TrainingEvent2Person_Score", sortable: true, formatter: thresholdScoreFormatter, sorttype: "number", width: 65 }, { name: "TrainingEvent2Person_Quantity", index: "TrainingEvent2Person_Quantity", sortable: true, formatter: thresholdQtyFormatter, sorttype: "number", width: 65 }, { name: "EditUnit", index: "EditUnit", sortable: false, formatter: editFormatter, width: 32, align: "center" }, { name: "delUnit", index: "delUnit", sortable: false, formatter: deleteFormatter, width: 50, align: "center" }, { name: "TrainingEvent_ID", hidden: "true", key: true }, { name: "TrainingEventType_ID", hidden: "true" }, { name: "ExecutionLevelColor", hidden: "true" }, { name: "ScoreColor", hidden: "true" }, { name: "QuantityColor", hidden: "true" }, { name: "BestPerformance", hidden: "true"}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', viewrecords: true, sortname: "DateModificationSrt", sortorder: "desc", autoencode: false, loadonce: false, pginput: true, recordpos: "left", altRows: true, pager: "#pagerEventHistory", hoverrows: false, toolbar: [true, "top"], pgbuttons: false, pginput: false, rowNum: 2e3, gridComplete: function (e) { $(this).setGridParam({ datatype: "local", selarrrow: "false" }); if (rowCount == $(this).getGridParam("records")) { switch (t) { case 0: $(this).jqGrid("hideCol", ["ExecutionLevel_ORGName", "TrainingEvent2Person_Score", "TrainingEvent2Person_Quantity"]); $("#ddlPerfomanceLevel").val("0"); $("#txtTotalScore").val(""); $("#txtQuality").val(""); break; case 1: $(this).jqGrid("hideCol", ["TrainingEvent2Person_Score", "TrainingEvent2Person_Quantity"]); $("#txtQuality").val(""); $("#txtTotalScore").val(""); break; case 2: $(this).jqGrid("hideCol", ["ExecutionLevel_ORGName", "TrainingEvent2Person_Quantity"]); $("#ddlPerfomanceLevel").val("0"); $("#txtQuality").val(""); break; case 3: $(this).jqGrid("hideCol", ["ExecutionLevel_ORGName"]); $("#ddlPerfomanceLevel").val("0"); break } $("#waitplease").css({ display: "none" }); $(this).trigger("reloadGrid"); rowCount = 0 } }, onCellSelect: function (e, t, n, r) { switch (t) { case 6: $("#waitplease").css({ display: "block" }); TrainingEventForm_click($(this).getRowData(e).TrainingEvent_ID, r); break; case 7: return eventRecords.TrainingEvent2Person_Delete($(this).getRowData(e).TrainingEvent_ID, e); break } return false }, ondblClickRow: function (e, t, n, r) { $("#waitplease").css({ display: "block" }); TrainingEventForm_click($(this).getRowData(e).TrainingEvent_ID, r) } }); $("#tblEventHistory").jqGrid("gridResize", { minWidth: 800, minHeight: 300 }).toolbarButtonAdd("#t_tblEventHistory", { caption: $("#hidER_btnAddEvent").text(), position: "first", align: n == "rtl" ? "right" : "left", buttonicon: "ui-icon-circle-plus", onClickButton: function (e) { btnAddEventHistoryItem_Click(e) } }) } function thresholdReadinessFormatter(e, t, n) { var r = e == null ? "" : e; if (n.ExecutionLevelColor) { return '<span  style="color:' + n.ExecutionLevelColor + ';">' + r + "</span>" } else return e == undefined ? "" : e } function thresholdScoreFormatter(e, t, n) { var r = e == null ? "" : e; if (n.ScoreColor) { return '<span  style="color:' + n.ScoreColor + ';">' + r + "</span>" } else return e == undefined ? "" : e } function thresholdQtyFormatter(e, t, n) { var r = e == null ? "" : e; if (n.QuantityColor) { return '<span  style="color:' + n.QuantityColor + ';">' + r + "</span>" } else return e == undefined ? "" : e } function TrainingEventForm_click(e, t) { t.preventDefault(); $("#divGeneralInfo").block({ css: { border: "0px" }, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); var n = getArgs(); if (e) { PQ.Admin.WebService.EventRecords.TrainingEvent2Person_Select(n.eid, e, function (e) { $("#spanPerfomanceLevel").text(" (" + e.MatchScore + ") "); $("#btnAddEventSubject").removeAttr("disabled"); _trainingEventType_ID = e.TrainingEventType_ID; _trainingEventID = e.TrainingEvent_ID; $("#hidtrainingEventID").val(e.TrainingEvent_ID); $("#ddlEventType").val(e.TrainingEventType_ID).addClass("no-display"); $("#txtEventDate").val(e.DateModificationSrt); $("#editRemarks").val(unescape(e.TrainingEventRemarks)); $("#txtEventType").val(e.TrainingEventType_Name).removeClass("no-display"); $("#txtPerfomanceLevel").val(e.ExecutionLevel_ORGName); $("#lblUpdaterName").text(e.UserFullName); $("#lblUpdateTime").text(e.UpdateTimeStampStr); TrainingEvent2Categories_Select(); SetVisibilityText(_trainingEventType_ID, true); $("#tabs").tabs({ selected: 0, disabled: false }); eventRecords.PopulateSubEvaluationTypeCombo(e.TrainingEventType_ID, e.TrainingEvent_ID); eventRecords.ReloadDetailEvaluationGrid(n.eid, e.TrainingEvent_ID, e.TrainingEventType_ID) }) } divTrainingEventForm_Open(); $("#waitplease").css({ display: "none" }); return false } function getEventSubjectsData(e) { setTimeout(function () { $("#waitplease").css({ display: "block" }) }, 500); PQ.Admin.WebService.EventRecords.TrainingEventCategory_Select(e, function (e, t) { ReceivedEventSubjectsData(JSON.parse(getMain(e)).rows) }, function (e, t) { alert("An error has occured retrieving data!") }) } function ReceivedEventSubjectsData(e) { var t = $("#tblEventSubjects"); t.clearGridData(); rowCount = e.length; for (var n = 0; n < e.length; n++) t.addRowData(n + 1, e[n]) } function getSelectedIDs() { var e = new Array; $("#waitplease").css({ display: "block" }); e = $("#tblEventSubjects").getGridParam("selarrrow"); if (e[0] == undefined) e[0] = "0"; try { $("#divEmployeeEvaluation").block({ css: { border: "0px" }, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); PQ.Admin.WebService.EventRecords.TrainingEventSubject_Save($("#hidtrainingEventID").val(), e, function (e) { if (e) { divEmployeeEvaluation.innerHTML = e; $("#waitplease").css({ display: "none" }); $("#divEmployeeEvaluationTotal").removeClass("ui-state-error").unblock(); eventRecords.PopulateSubEvaluationTypeCombo(_trainingEventType_ID == undefined ? $("#ddlEventType").val() : _trainingEventType_ID, $("#hidtrainingEventID").val()); $("#divAddEventSubject").dialog("destroy"); eventRecords.SetDeleteEventSubjects() } }, this.ExecuteFailResult) } catch (t) { } } function TrainingEvent2Categories_Select() { try { var e = getArgs(); if (e.eid) { PQ.Admin.WebService.EventRecords.TrainingEvent2Categories_Select(e.eid, $("#hidtrainingEventID").val(), function (e) { if (e) { divEmployeeEvaluation.innerHTML = e.HtmlTrainingEvent2Categories; $("#txtTotalScore").val(e.TrainingEvent2Person_Score == null ? "" : e.TrainingEvent2Person_Score); $("#ddlPerfomanceLevel").val(e.ExecutionLevel_ID == null ? "0" : e.ExecutionLevel_ID); $("#txtQuality").val(e.TrainingEvent2Person_Quantity == null ? "" : e.TrainingEvent2Person_Quantity); $("#txtRemarksEvaluation").val(e.TrainingEvent2Person_Remarks == null ? "" : e.TrainingEvent2Person_Remarks); $("#hidExecutionLevel_ID").val(e.ExecutionLevel_ID); $("#txtPerformanceTime").val(e.ExecutionTimeStr); eventRecords.SetDeleteEventSubjects() } }, this.ExecuteFailResult) } } catch (t) { alert(t.Description) } } function ReloadEventHistoryGrid(e) { $("#waitplease").css({ display: "block" }); if ($("#ddlTrainingEventType").val() == "0") { _trainEvTypeID = null; $("#hidEventTypeID").val("") } else _trainEvTypeID = e; PQ.Admin.WebService.EventRecords.TrainingEventType_SelectRequiredField(e, function (t) { if (!isNaN(t)) { $("#tblEventHistory").GridUnload(); $("#hidEventTypeID").val(t); CreateAndPopulateEventRecordsGrid(e, t) } }, function (e) { $("#divEventHistoryTable").unblock(); $("#waitplease").css({ display: "none" }); return false }) } function getRowIDs() { var e = $("#tblEventSubjects").getDataIDs(); var t = ""; for (var n = 0; n < e.length; n++) { t += "postion: " + n + " " + e[n] + "\n" } alert(t) } function checkboxFormatter(e, t, n) { var r; if (e) { r = "<input type='checkbox' onclick=\"eventRecords.SaveCheckBoxValue('" + n.TrainingEvent_ID + "','" + n.SubEvaluationType_ID + "', this,'" + t.rowId + "','" + n + "');\" checked='checked' />"; $("#" + t.rowId, $("#tlbDetailedEvaluation")).removeClass("ui-widget-content"); $("#tlbDetailedEvaluation").setRowData(t.rowId, n, { color: "red" }) } else r = "<input type='checkbox' onclick=\"eventRecords.SaveCheckBoxValue('" + n.TrainingEvent_ID + "','" + n.SubEvaluationType_ID + "', this,'" + t.rowId + "','" + n + "');\"  />"; return r } function ReceivedDetailedEvaluationData(e) { var t = $("#tlbDetailedEvaluation"); t.clearGridData(); for (var n = 0; n < e.length; n++) t.addRowData(n + 1, e[n]) } function btnAddDeatilEvaluation_Click() { $("#waitplease").css({ display: "block" }); var e = getArgs(); if (e.eid) { var t = { TrainingEvent_ID: $("#hidtrainingEventID").val().trim() == "" ? null : $("#hidtrainingEventID").val().replace(/\s+/gi, ""), SubEvaluationType_ID: $("#ddlSubEvaluationType").val(), SubEvaluation2TrainingEvent_Score: $("#txtDetailEvaluationScore").val().trim() == "" ? null : $("#txtDetailEvaluationScore").val(), SubEvaluation2TrainingEvent_Quantity: $("#txtDetEvalQuantity").val().trim() == "" ? null : $("#txtDetEvalQuantity").val(), ExecutionLevel_ID: $("#ddlDetEvalPerfomanceLabel").val() == "0" ? null : $("#ddlDetEvalPerfomanceLabel").val(), Person_ID: e.eid }; try { PQ.Admin.WebService.EventRecords.SubEvaluation2TrainingEvent_Save(t, function (n) { $("#tlbDetailedEvaluation").GridUnload(); eventRecords.ReloadDetailEvaluationGrid(e.eid, t.TrainingEvent_ID, $("#ddlEventType").val()); $("#waitplease").css({ display: "none" }); $("#divAddDetailEvaluation").dialog("destroy") }, function (e) { $("#waitplease").css({ display: "none" }); $("#divAddDetailEvaluation").dialog("destroy") }) } catch (n) { alert(n.Description) } } return false } function ReceivedEventAttachmentData(e) { var t = $("#tlbEventAttachment"); t.clearGridData(); for (var n = 0; n < e.length; n++) t.addRowData(n + 1, e[n]) } function btnUpdate_onclick(e) { if (RequaredTrainingEventFields(e)) { $("#waitplease").css({ display: "block" }); var t = getArgs(); if (t.eid) { var n = { TrainingEvent2Person_Score: $("#txtTotalScore").val(), ExecutionLevel_ID: $("#ddlPerfomanceLevel").val(), TrainingEvent2Person_Quantity: $("#txtQuality").val() == "" ? null : $("#txtQuality").val(), TrainingEventRemarks: $("#editRemarks").val(), TrainingEvent_ID: $("#hidtrainingEventID").val() == "" ? null : $("#hidtrainingEventID").val(), TrainingEvent_Date: $("#txtEventDate").val(), TrainingEventType_ID: $("#ddlEventType").val(), TrainingEvent2Person_Remarks: $("#txtRemarksEvaluation").val(), ExecutionTimeStr: $("#txtPerformanceTime").val(), Person_ID: t.eid, UserFullName: $("#lnkAdmin").text() }; try { PQ.Admin.WebService.EventRecords.TrainingEvent_Save(n, function (e) { if (e) { $("#hidtrainingEventID").val(e); $("#btnAddEventSubject").removeAttr("disabled"); $("#tabs").tabs("option", "disabled", false); $("#lblUpdaterName").text($("#lnkAdmin").text()); $("#lblUpdateTime").text(new Date("dd/MM/yy hh:mm:ss")); eventRecords.ReloadDetailEvaluationGrid(t.eid, e, n.TrainingEventType_ID) } $("#tblEventHistory").GridUnload(); _trainEvTypeID = _trainEvTypeID == undefined ? null : _trainEvTypeID; _evTypeID = $("#ddlTrainingEventType").val() == "0" ? null : parseInt($("#hidEventTypeID").val()); CreateAndPopulateEventRecordsGrid(_trainEvTypeID, _evTypeID); $("#waitplease").css({ display: "none" }) }, function (e) { $("#waitplease").css({ display: "none" }); $("#divTrainingEventForm").dialog("destroy") }) } catch (r) { alert(r.Description) } } } return false } function btnAddEventAttachment_Click() { $("#txtEventAttachmentName").val(""); clearContents(); divEventAttachment_Opent() } function RequaredEventAttachFields() { if ($("#txtEventAttachmentName").val() == "") $("#txtEventAttachmentName").addClass("ui-state-error").focus(); else { $("#txtEventAttachmentName").removeClass("ui-state-error", 500); return true } return false } function btnUploadEventAttachment_Click() { } function EventAttachmentOnClientUploadComplete(e, t) { $("#waitplease").css({ display: "none" }); $("#tlbEventAttachment").GridUnload(); eventRecords.EventAttachmentGrid($("#hidtrainingEventID").val()); $("#divEventAttachment").dialog("destroy") } function EventAttachmentOnClientUploadError(e, t) { $("#waitplease").css({ display: "none" }); $("#divErrorMessage").removeClass("no-display"); clearContents() } function EventAttachmentOnClientUploadStarted(e, t) { $("#waitplease").css({ display: "block" }); return false } function ImgPreviewDocument_click(e) { var t = e.TrainingEventAttachmentsID; $("#hidEventAttachmentsID").val(t); $("#btnReviewDownloadEventFile").click() } function RequaredTrainingEventFields(e) { var t = new Boolean(true); if ($("#txtEventDate").val() == "") { $("#txtEventDate").addClass("ui-state-error").focus(); return false } else { $("#txtEventDate").removeClass("ui-state-error", 500) } if ($("#ddlEventType").val() == "0") { $("#ddlEventType").addClass("ui-state-error").focus(); return false } else { $("#ddlEventType").removeClass("ui-state-error", 500) } $("#divHiddenFields .wrapper").each(function () { if (!$(this).hasClass("no-display")) { if ($(this).find(".wrappered").is("select")) { if ($(this).find(".wrappered").val() == "0") { $(this).find(".wrappered").addClass("ui-state-error").focus(); t = false; return false } else $(this).find(".wrappered").removeClass("ui-state-error", 500) } if ($(this).find(".wrappered").is("input")) { if ($(this).find(".wrappered").val() == "") { $(this).find(".wrappered").addClass("ui-state-error").focus(); t = false; return false } else $(this).find(".wrappered").removeClass("ui-state-error", 500) } if (e) { if ($("#divEmployeeEvaluation").is(":empty")) { $("#divEmployeeEvaluationTotal").addClass("ui-state-error"); t = false; return false } else { $("#divEmployeeEvaluationTotal").removeClass("ui-state-error", 500) } } } else { if (e) { if ($("#divEmployeeEvaluation").is(":empty")) { $("#divEmployeeEvaluationTotal").addClass("ui-state-error"); t = false; return false } else { $("#divEmployeeEvaluationTotal").removeClass("ui-state-error", 500) } } } if (CheckTimeValid()) { $("#txtPerformanceTime").removeClass("ui-state-error", 200) } else { $("#txtPerformanceTime").addClass("ui-state-error"); t = false; return false } }); if (t) return true; else return false } function CheckTimeValid() { var e = new Boolean(true); if ($("#txtPerformanceTime").val() != "" && $("#txtPerformanceTime").val() != "hh:mm:ss") { var t = new RegExp("^((([0]?[1-9]|1[0-2])(:|.)[0-5][0-9]((:|.)[0-5][0-9])?( )?(AM|am|aM|Am|PM|pm|pM|Pm))|(([0]?[0-9]|1[0-9]|2[0-3])(:|.)[0-5][0-9]((:|.)[0-5][0-9])?))$"); e = t.test($("#txtPerformanceTime").val()) } return e } var rowCount = 0; var thresholdData; var eventRecords = { availableTags: null, rowObject: null, selctedID: null }; eventRecords.Init = function () { }; eventRecords.DeleteEventSubject = function (e, t) { try { PQ.Admin.WebService.PQWebService.DeleteEventSubject(e, this.ExecuteDeleteEventSubjectCallbackResult, this.ExecuteFailResult, t) } catch (n) { alert(n.Description) } }; eventRecords.ExecuteDeleteEventSubjectCallbackResult = function (e, t) { if (e) { eventRecords.PopulateSubEvaluationTypeCombo(_trainingEventType_ID, $("#hidtrainingEventID").val()); t.slideUp(500, function () { $(this).remove() }) } }; eventRecords.getEventRecordsData = function (e, t) { var n = getArgs(); if (n.eid) { PQ.Admin.WebService.EventRecords.TrainingEvent2Person_SelectByEvent(n.eid, t, function (e, t) { eventRecords.ReceivedEventRecordsData(JSON.parse(getMain(e)).rows) }, function (e, t) { alert("An error has occured retrieving data!") }) } }; eventRecords.ReceivedEventRecordsData = function (e) { var t = $("#tblEventHistory"); t.clearGridData(); rowCount = e.length; for (var n = 0; n < e.length; n++) t.addRowData(n + 1, e[n]) }; eventRecords.TrainingEvent2Person_Delete = function (e, t) { if (e != undefined) { var n = getArgs(); $("#ConfirmDeleteAttachment").dialog({ autoOpen: true, modal: true, resizable: false, closeOnEscape: true, height: 150, open: function (e, t) { $(this).parent().appendTo("form") }, buttons: { Ok: function (r) { r.preventDefault(); $("#waitplease").css({ display: "block" }); try { PQ.Admin.WebService.EventRecords.TrainingEvent2Person_Delete(e, n.eid, function (e) { if (e) { $("#" + t).hide("slow"); $("#tblEventHistory").resetSelection(); $("#waitplease").css({ display: "none" }); $("#ConfirmDeleteAttachment").dialog("destroy") } }, function (e) { $("#waitplease").css({ display: "none" }); return false }) } catch (r) { $("#waitplease").css({ display: "none" }); return false } return false }, Cancel: function (e) { e.preventDefault(); $(this).dialog("destroy"); return false } } }) } }; eventRecords.AddEventSubjectsGrid = function (e) { var t; if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") t = "rtl"; else t = "ltr" } $("#divAddEventSubject").block({ css: { border: "0px" }, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); $("#tblEventSubjects").jqGrid({ direction: t, datatype: function (t) { getEventSubjectsData(e) }, autowidth: true, colNames: ["ID", $("div span[id=hidTrainingEventCategoryName]").text()], colModel: [{ name: "TrainingEventCategory_ID", index: "TrainingEventCategory_ID", formatter: "integer", key: true, hidden: true }, { name: "TrainingEventCategory_Name", index: "TrainingEventCategory_Name", sortable: true, sorttype: "text", width: 350}], viewrecords: true, sortorder: "", pginput: true, recordpos: "left", pager: "#pgrUnitHistory", pgbuttons: false, pginput: false, altRows: true, multiselect: true, sortname: "TrainingEventCategory_ID", loadonce: true, rowNum: 2e3, gridComplete: function () { $(this).setGridParam({ datatype: "local" }); if (rowCount == $(this).getGridParam("records")) { $(this).trigger("reloadGrid"); $("#divAddEventSubject").unblock(); rowCount = 0; setTimeout(function () { $("#waitplease").css({ display: "none" }) }, 500) } }, onSelectAll: function (e, t) { if (t) eventRecords.selctedID = e; else eventRecords.selctedID = null; return false } }) }; eventRecords.SetDeleteEventSubjects = function () { deleteEventSubjects(".closeable") }; eventRecords.ReloadDetailEvaluationGrid = function (e, t, n) { $("#waitplease").css({ display: "block" }); PQ.Admin.WebService.EventRecords.TrainingEventType_SelectRequiredField(n, function (n) { if (!isNaN(n)) { $("#divTrainingEventForm").unblock(); $("#tlbDetailedEvaluation").GridUnload(); eventRecords.DetalEvaluationGrid(e, t, n) } }, function (e) { return false }) }; eventRecords.DetalEvaluationGrid = function (e, t, n) { var r; if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") r = "rtl"; else r = "ltr" } $("#waitplease").css({ display: "block" }); $("#divDetailedEvaluation").block({ css: { border: "0px" }, timeout: 500, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); $("#tlbDetailedEvaluation").jqGrid({ direction: r, datatype: function (n) { eventRecords.getDetailedEvaluationData(n, e, t) }, height: 375, width: 680, autowidth: true, colNames: ["", $("#hidSubEvaluationType_Incomplete").text(), $("div#hiddFuildCaptions span[id=hidSubEvaluationType]").text(), $("div#hiddFuildCaptions span[id=hidEventScore]").text(), $("div#hiddFuildCaptions span[id=hidReadinessLabel]").text(), $("div#hiddFuildCaptions span[id=hidQuantity]").text(), $("div#hiddFuildCaptions span[id=hidEventRecordsEdit]").text(), $("div#hiddFuildCaptions span[id=hidEventRecordsDelete]").text(), "SubEvaluationType_ID", "ExecutionLevel_ID"], colModel: [{ name: "TrainingEvent_ID", index: "TrainingEvent_ID", formatter: "integer", key: true, hidden: true }, { name: "isMark4Alert", index: "isMark4Alert", sortable: false, editable: true, width: 55, align: "center", formatter: checkboxFormatter }, { name: "SubEvaluationType_Name", index: "SubEvaluationType_Name", sortable: true, sorttype: "text", width: 200 }, { name: "SubEvaluation2TrainingEvent_Score", index: "SubEvaluation2TrainingEvent_Score", sortable: true, sorttype: "number", width: 150 }, { name: "ExecutionLevel_ORGName", index: "ExecutionLevel_ORGName", sortable: true, sorttype: "text", width: 150 }, { name: "SubEvaluation2TrainingEvent_Quantity", index: "SubEvaluation2TrainingEvent_Quantity", sortable: true, sorttype: "int", width: 150 }, { name: "EditEval", index: "EditEval", sortable: false, edittype: "image", formatter: editFormatter, width: 32, align: "center" }, { name: "DelEval", index: "DelEval", sortable: false, edittype: "image", formatter: deleteFormatter, width: 45, align: "center" }, { name: "SubEvaluationType_ID", index: "SubEvaluationType_ID", formatter: "integer", hidden: true }, { name: "ExecutionLevel_ID", index: "ExecutionLevel_ID", formatter: "integer", hidden: true}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', viewrecords: true, sortorder: "desc", autoencode: false, pginput: true, recordpos: "left", altRows: true, loadonce: false, pager: "#pgrDetailedEvaluation", toolbar: [true, "top"], hoverrows: false, pgbuttons: false, pginput: false, gridComplete: function () { $(this).setGridParam({ datatype: "local", selarrrow: "false" }); switch (n) { case 1: $(this).jqGrid("hideCol", ["SubEvaluation2TrainingEvent_Score", "SubEvaluation2TrainingEvent_Quantity"]); break; case 2: $(this).jqGrid("hideCol", ["ExecutionLevel_ORGName", "SubEvaluation2TrainingEvent_Quantity"]); break; case 3: $(this).jqGrid("hideCol", ["ExecutionLevel_ORGName"]); break; default: $(this).jqGrid("hideCol", ["ExecutionLevel_ORGName", "SubEvaluation2TrainingEvent_Score", "SubEvaluation2TrainingEvent_Quantity"]); break } }, onCellSelect: function (e, t, n, r) { switch (t) { case 6: eventRecords.btnUpdateDeatilEvaluation_Click($(this).getRowData(e)); break; case 7: return eventRecords.btnDeleteDeatilEvaluation_Click($(this).getRowData(e)); break } return false }, ondblClickRow: function (e, t, n, r) { $("#waitplease").css({ display: "block" }); eventRecords.btnUpdateDeatilEvaluation_Click($(this).getRowData(e)) }, afterInsertRow: function (e, t) { if (t.isMark4Alert) { $(this).jqGrid("setRowData", e, false, { color: "red" }) } } }); $("#tlbDetailedEvaluation").toolbarButtonAdd("#t_tlbDetailedEvaluation", { caption: $("#hidER_DetailedEvaluation_Edit_btnAdd").text(), position: "first", align: r == "rtl" ? "right" : "left", buttonicon: "ui-icon-circle-plus", onClickButton: function (e) { btnAddDetailedEvaluation_Click() } }) }; eventRecords.getDetailedEvaluationData = function (e, t, n) { var r = getArgs(); if (r.eid) { PQ.Admin.WebService.EventRecords.SubEvaluation2TrainingEvent_Select(r.eid, n, function (e, t) { try { ReceivedDetailedEvaluationData(JSON.parse(getMain(e)).rows); $("#waitplease").css({ display: "none" }) } catch (n) { } }, function (e, t) { alert("An error has occured retrieving data!") }) } }; eventRecords.SaveCheckBoxValue = function (e, t, n, r, i) { $("#waitplease").css({ display: "block" }); var s = getArgs(); if (n.checked) $("#tlbDetailedEvaluation").setRowData(r, i, { color: "red" }); else $("#tlbDetailedEvaluation").setRowData(r, i, { color: "black" }); if (s.eid) { PQ.Admin.WebService.EventRecords.SubEvaluationType_SaveCheckBoxValue(e, s.eid, n.checked, t, function (e) { setTimeout(function () { $("#waitplease").css({ display: "none" }) }, 250) }, function (e) { }) } }; eventRecords.btnUpdateDeatilEvaluation_Click = function (e, t) { if (e) { $("#hidtrainingEventID").val(e.TrainingEvent_ID); $("#ddlSubEvaluationType").val(e.SubEvaluationType_ID); $("#txtSubEvaluationTypeEdit").val(e.SubEvaluationType_Name); $("#txtDetailEvaluationScore").val(e.SubEvaluation2TrainingEvent_Score == " " ? null : e.SubEvaluation2TrainingEvent_Score); $("#ddlDetEvalPerfomanceLabel").val(e.ExecutionLevel_ID); SetVisibilityText($("#ddlEventType").val()); $("#btnAddDeatilEvaluation").val($("#hidUpdate").text()); $("#txtSubEvaluationTypeEdit").removeClass("no-display"); $("#ddlSubEvaluationType").addClass("no-display") } divAddDetailEvaluation_Open() }; eventRecords.btnDeleteDeatilEvaluation_Click = function (e) { if (e != undefined) { var t = getArgs(); var n = { Person_ID: t.eid, TrainingEvent_ID: e.TrainingEvent_ID, SubEvaluationType_ID: e.SubEvaluationType_ID }; this.rowObject = e; $("#ConfirmDeleteAttachment").dialog({ autoOpen: true, modal: true, resizable: false, closeOnEscape: true, height: 150, open: function (e, t) { $(this).parent().appendTo("form") }, buttons: { Ok: function (e) { e.preventDefault(); $("#waitplease").css({ display: "block" }); try { PQ.Admin.WebService.EventRecords.SubEvaluation2TrainingEvent_Delete(n, function (e) { if (e) { $("#tlbDetailedEvaluation").GridUnload(); eventRecords.ReloadDetailEvaluationGrid(n.Person_ID, n.TrainingEvent_ID, $("#ddlEventType").val()); $("#waitplease").css({ display: "none" }); $("#ConfirmDeleteAttachment").dialog("destroy") } }, this.ExecuteFailResult) } catch (e) { return false } return false }, Cancel: function (e) { e.preventDefault(); $(this).dialog("destroy"); return false } } }) } }; eventRecords.EventAttachmentGrid = function (e) { var t; if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") t = "rtl"; else t = "ltr" } $("#divDetailedEvaluation").block({ css: { border: "0px" }, timeout: 500, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); $("#waitplease").css({ display: "block" }); $("#tlbEventAttachment").jqGrid({ direction: t, datatype: function (t) { eventRecords.getEventAttachmentData(t, e) }, height: 375, autowidth: true, colNames: [$("div#hiddFuildCaptions span[id=hidDate]").text(), $("div#hiddFuildCaptions span[id=hidPersonAttachName]").text(), $("div#hiddFuildCaptions span[id=hidEventRecordsEdit]").text(), $("div#hiddFuildCaptions span[id=hidEventRecordsDelete]").text(), "TrainingEvent_ID", "TrainingEventAttachmentsID"], colModel: [{ name: "DateCreated", index: "DateCreated", sortable: true, sorttype: "date", width: 200 }, { name: "TrainingEventAttachmentsName", index: "TrainingEventAttachmentsName", sortable: true, sorttype: "number", width: 450 }, { name: "OpenAttach", index: "OpenAttach", sortable: false, edittype: "image", formatter: attachFormatter, width: 32, align: "center" }, { name: "DelAttach", index: "DelAttach", sortable: false, edittype: "image", formatter: deleteFormatter, width: 45, align: "center" }, { name: "TrainingEvent_ID", index: "TrainingEvent_ID", formatter: "integer", hidden: true }, { name: "TrainingEventAttachmentsID", index: "TrainingEventAttachmentsID", formatter: "integer", key: true, hidden: true}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', datefmt: "d/m/Y", viewrecords: true, sortorder: "desc", autoencode: false, pginput: true, recordpos: "left", altRows: true, recordpos: "left", loadonce: false, toolbar: [true, "top"], hoverrows: false, pager: "#pgrEventAttachment", pgbuttons: false, pginput: false, gridComplete: function () { $(this).setGridParam({ datatype: "local", selarrrow: "false" }) }, onCellSelect: function (e, t, n, r) { switch (t) { case 2: ImgPreviewDocument_click($(this).getRowData(e)); break; case 3: eventRecords.btnDeleteEventAttachment_Click($(this).find(".jqgrow")[e - 1]); break } return false }, ondblClickRow: function (e, t, n, r) { ImgPreviewDocument_click($(this).getRowData(e)) } }); $("#tlbEventAttachment").toolbarButtonAdd("#t_tlbEventAttachment", { caption: $("#hidER_DetailedEvaluation_Attach_btnAdd").text(), position: "first", align: t == "rtl" ? "right" : "left", buttonicon: "ui-icon-circle-plus", onClickButton: function (e) { btnAddEventAttachment_Click() } }) }; eventRecords.getEventAttachmentData = function (e, t) { var n = getArgs(); if (n.eid) { PQ.Admin.WebService.EventRecords.TrainingEventAttachments_Select(null, t, function (e, t) { try { ReceivedEventAttachmentData(JSON.parse(getMain(e)).rows); $("#waitplease").css({ display: "none" }) } catch (n) { } }, function (e, t) { $("#waitplease").css({ display: "none" }) }) } }; eventRecords.btnDeleteEventAttachment_Click = function (e) { if (e != undefined) { var t = getArgs(); var n = $(e).find("td").eq(5).text(); this.rowObject = $(e); $("#ConfirmDeleteAttachment").dialog({ autoOpen: true, modal: true, resizable: false, closeOnEscape: true, height: 150, open: function (e, t) { $(this).parent().appendTo("form") }, buttons: { Ok: function (e) { e.preventDefault(); $("#waitplease").css({ display: "block" }); try { PQ.Admin.WebService.EventRecords.TrainingEventAttachments_Delete(n, function (e) { if (e) { $("#tlbEventAttachment").GridUnload(); eventRecords.EventAttachmentGrid($("#hidtrainingEventID").val()); $("#waitplease").css({ display: "none" }); $("#ConfirmDeleteAttachment").dialog("destroy") } }, this.ExecuteFailResult) } catch (e) { return false } return false }, Cancel: function (e) { e.preventDefault(); $(this).dialog("destroy"); return false } } }) } }; eventRecords.PopulateTrainingEventTypeCombo = function () { $("#ddlTrainingEventType>option").remove(); $("#ddlEventType>option").remove(); PQ.Admin.WebService.EventRecords.TrainingEventType_SelectAll($("#hidGrtTrainingEventType").text(), function (e) { $(e).each(function () { $("#ddlTrainingEventType").append($("<option></option>").val(this["TrainingEventType_ID"]).html(this["TrainingEventType_Name"])); $("#ddlEventType").append($("<option></option>").val(this["TrainingEventType_ID"]).html(this["TrainingEventType_Name"])) }) }, function (e) { return false }) }; eventRecords.PopulatlPerfomanceLevelCombo = function () { $("#ddlPerfomanceLevel>option").remove(); $("#ddlDetEvalPerfomanceLabel>option").remove(); PQ.Admin.WebService.EventRecords.PerfomanceLevel_SelectAll($("#hidGrtPerfomanceLabel").text(), function (e) { $(e).each(function () { $("#ddlPerfomanceLevel").append($("<option></option>").val(this["ExecutionLevel_ID"]).html(this["ExecutionLevel_ORGName"]).attr("rel", this["MatchScore"])); $("#ddlDetEvalPerfomanceLabel").append($("<option></option>").val(this["ExecutionLevel_ID"]).html(this["ExecutionLevel_ORGName"]).attr("rel", this["MatchScore"])) }) }, function (e) { return false }) }; eventRecords.PopulateSubEvaluationTypeCombo = function (e, t) { $("#ddlSubEvaluationType>option").remove(); PQ.Admin.WebService.EventRecords.SubEvaluationType_Select(e, t, $("#hidGrtSubEvaluationType").text(), function (e) { $(e).each(function () { $("#ddlSubEvaluationType").append($("<option></option>").val(this["SubEvaluationType_ID"]).html(this["SubEvaluationType_Name"])) }) }, function (e) { return false }) }; eventRecords.PopulateJobsListCombo = function (e) { $("#ddlJobEventCopy").addClass("ui-autocomplete-loading"); $("#ddlJobEventCopy>option").remove(); e = e == "" ? 0 : e; try { PQ.Admin.WebService.PQWebService.GetJobByUnitID(e, $("#hidEventCopy_grtSelectJobs").text(), function (e) { $(e).each(function () { $("#ddlJobEventCopy").append($("<option></option>").val(this["Job_ID"]).html(this["Job_Name"])) }); setTimeout(function () { $("#ddlJobEventCopy").removeClass("ui-autocomplete-loading") }, 500) }, function (e) { }) } catch (t) { $("#waitplease").css({ display: "none" }) } return false }; eventRecords.GetEventCopyEmlpoyeeGrid = function () { var e; var t; if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") e = "rtl"; else e = "ltr" } $("#tlbEventCopyEmlpoyeeGrid").jqGrid({ direction: e, datatype: function (e) { eventRecords.getEventCopyEmlpoyeeListGrid() }, height: 375, width: 800, colNames: [$("#hidEmployeeID").text(), $("#hidFirstName").text(), $("#hidLastName").text(), $("#hidJob").text(), $("#hidUnit").text()], colModel: [{ name: "Person_ID", index: "Person_ID", key: true, sortable: true, sorttype: "int", width: 100 }, { name: "Person_FirstName", index: "Person_FirstName", sortable: true, sorttype: "text", width: 100 }, { name: "Person_LastName", index: "Person_LastName", sortable: true, sorttype: "text", width: 100 }, { name: "Job_Name", index: "Job_Name", sortable: true, sorttype: "text", width: 100 }, { name: "Unit_Name", index: "Unit_Name", sortable: true, sorttype: "text", width: 100}], viewrecords: true, sortorder: "asc", autoencode: false, loadonce: false, recordpos: "left", pager: "#pgrEventCopyEmlpoyeeGrid", pgbuttons: false, pginput: false, multiselect: true, rowNum: 1e4, gridComplete: function () { $(this).setGridParam({ datatype: "local" }); var e = $(this).jqGrid("getDataIDs"); if (rowCount == $(this).getGridParam("records")) { $("#waitplease").css({ display: "none" }); $(this).trigger("reloadGrid"); $(this).jqGrid("sortGrid", "Person_ID", true) } }, onSelectAll: function (e, t) { if (t) eventRecords.selctedID = e; else eventRecords.selctedID = null; return false }, onSelectRow: function (e) { if (e && e !== t) { $(this).jqGrid("restoreRow", t); $(this).jqGrid("editRow", e, true); t = e } } }); $("#tlbEventCopyEmlpoyeeGrid").jqGrid("gridResize", { minWidth: 900, minHeight: 300 }) }; eventRecords.getEventCopyEmlpoyeeListGrid = function () { var e = getArgs(); var t; if (e.eid) t = $.makeArray(e.eid); try { var n = { Person_FirstName: $("#txtFirstName").val(), Person_LastName: $("#txtLastName").val(), Job_ID: $("#ddlJobEventCopy").val(), UnitID: $("#hidECUnitID").val(), IsActive: true, IsReadiness: true }; PQ.Admin.WebService.EmployeeSearchWS.EmployeeSearching(n, t, function (e) { eventRecords.EventCopyReceivedEmployeeListData(JSON.parse(getMain(e)).rows) }, function (e, t) { RaiseWarningAlert("An error has occured retrieving data!") }) } catch (r) { } }; eventRecords.EventCopyReceivedEmployeeListData = function (e) { var t = $("#tlbEventCopyEmlpoyeeGrid"); t.clearGridData(); rowCount = e.length; for (var n = 0; n < e.length; n++) t.addRowData(n + 1, e[n]) }; eventRecords.EventCopySelectedEmployeeIDs = function (e) { var t = getArgs(); var n = new Boolean; var r = new Array; var i = new Array; $("#waitplease").css({ display: "block" }); r = $("#tlbEventCopyEmlpoyeeGrid").getGridParam("selarrrow"); if (r[0] == undefined) r[0] = "0"; try { $(r).each(function () { var e = $("#tlbEventCopyEmlpoyeeGrid").getRowData(this); try { i.push({ Person_ID: e.Person_ID }) } catch (t) { } }); e.PersonList = i; try { PQ.Admin.WebService.EventRecords.EmployeeProfile_EventCopy(e, function (e) { if (e) { setTimeout(function () { $("#btnECClose").trigger("click"); $("#waitplease").css({ display: "none" }) }, 500) } }, function (e) { $("#waitplease").css({ display: "none" }); $("#btnECClose").trigger("click") }) } catch (s) { } } catch (s) { } }; eventRecords.SetFirstNameArray = function () { try { $("#txtFirstName").autocomplete({ source: function (e, t) { PQ.Admin.WebService.PQWebService.GetFirstNameCompletionList(e.term, function (e) { if (e) { t($.map(getMain(e), function (e) { return { value: e.Person_FirstName} })) } }, function (e) { }, null) }, minLength: 1 }) } catch (e) { return false } }; eventRecords.SetLastNameArray = function () { try { $("#txtLastName").autocomplete({ source: function (e, t) { PQ.Admin.WebService.PQWebService.GetLastNameCompletionList(e.term, function (e) { if (e) { t($.map(getMain(e), function (e) { return { value: e.Person_LastName} })) } }, function (e) { }, null) }, minLength: 1 }) } catch (e) { return false } };eventRecords.CreateUnitTree = function (e, t) { try { PQ.Admin.WebService.PQWebService.GetUserMenu(e == undefined ? null : e, function (e) { if (e) { var n, r; if ($.cookie("lang")) { var i = $.cookie("lang"); if (i == "he-IL" || i == "ar") { n = "default-rtl"; r = true } else { n = "default"; r = false } } try { var s = $("#lblTreeLebel").text() == "" ? 0 : parseInt($("#lblTreeLebel").text()); var o = GetArrayTreeIDs(e, s); $("#" + t.id).jstree({ xml_data: { data: e }, plugins: ["themes", "xml_data", "ui", "types"], core: { rtl: r, initially_open: [o], animation: "100" }, themes: { theme: n }, types: { types: { file: { valid_children: ["default"], icon: { image: "/opeReady/Resources/images/active.png"} }, folder: { valid_children: "all", icon: { image: "/opeReady/Resources/images/close.png" }, select_node: function () { return false } }}} }).bind("select_node.jstree", function (e, n) { $("#txtEventCopyUnit").val($(n.rslt.obj.find("a").get(0)).text()).removeClass("ui-state-error", 100); $("#hidECUnitID").val(n.rslt.obj.get(0).id); eventRecords.PopulateJobsListCombo(n.rslt.obj.get(0).id); $("#" + t.id).fadeOut("slow"); return false }) } catch (u) { } } }, function () { }) } catch (n) { RaiseWarningAlert(n.Description) } };