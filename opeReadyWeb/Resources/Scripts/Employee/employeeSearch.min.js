function backgroundFormatter(a, b, c) {
    var d = new Image(40, 50);
    $(d).attr("id", c.Person_ID);
    $(d).attr("src", "/opeReady/Handlers/readinessPictures.ashx?rdnsid=" + c.ReadinessLevel_ID);
    return d.outerHTML || (new XMLSerializer).serializeToString(d)
}
function imageFormatter(a, b, c) {
    var d = new Image(40, 50);
    $(d).attr("id", c.Person_ID);
    $(d).attr("src", "/opeReady/Handlers/PhotoHandler.ashx?eid=" + c.Person_ID);
    $(d).attr("class", "tooltip");
    return d.outerHTML || (new XMLSerializer).serializeToString(d)
}
var rowCount;
var icons = {
    header: "ui-icon-circle-arrow-e",
    headerSelected: "ui-icon-circle-arrow-s"
};
var employeeSearch = {};
employeeSearch.Init = function () { };
employeeSearch.CreateEmployeeCollectionGrid = function (a) {
    var b;
    if ($.cookie("lang")) {
        if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") b = "rtl";
        else b = "ltr"
    }
    $("#divResultPanel").block({
        css: {
            border: "0px"
        },
        overlayCSS: {
            backgroundColor: "#ffffff",
            opacity: .7
        },
        message: ""
    });
    $("#tblEmlpoyee").jqGrid({
        direction: b,
        datatype: function (b) { employeeSearch.getEmployeeSearchData(a) },
        height: 400,
        autowidth: true,
        gridview: true,
        loadonce: false,
        colNames: [$("#hidEmpSearch_Grid_headerPhoto").text(), $("#hidEmpSearch_Grid_lblEmployeeID").text(), $("#hidEmpSearch_Grid_lblFirstName").text(), $("#hidEmpSearch_Grid_lblLastName").text(), $("#hidEmpSearch_Grid_lblJob").text(), $("#hidEmpSearch_Grid_lblUnit").text(), "", $("#hidEmpSearch_Grid_header_ReadinessLevel").text(), $("#hidEmpSearch_btnEdit").text(), "ReadinessLevel_ID"],
        colModel: [{
            name: "Photo",
            index: "Photo",
            formatter: imageFormatter,
            width: 35,
            align: "center",
            classes: "personPopup",
            sortable: false
        }, {
            name: "Person_ID",
            index: "Person_ID",
            sortable: true,
            key: true,
            sorttype: "number",
            width: 125
        }, {
            name: "Person_FirstName",
            index: "Person_FirstName",
            sortable: true,
            sorttype: "text",
            width: 125
        }, {
            name: "Person_LastName",
            index: "Person_LastName",
            sortable: true,
            sorttype: "text",
            width: 125
        }, {
            name: "Job_Name",
            index: "Job_Name",
            sortable: true,
            sorttype: "text",
            width: 125
        }, {
            name: "Unit_Name",
            index: "Unit_Name",
            sortable: true,
            sorttype: "text",
            width: 125
        }, {
            name: "LabelEmployee",
            index: "LabelEmployee",
            sortable: false,
            formatter: backgroundFormatter,
            width: 35,
            align: "center"
        }, {
            name: "ReadinessLevel_Name",
            index: "ReadinessLevel_Name",
            sortable: true,
            align: "center",
            width: 80
        }, {
            name: "EditEmployee",
            index: "EditEmployee",
            sortable: false,
            edittype: "image",
            formatter: editFormatter,
            width: 25,
            align: "center"
        }, {
            name: "ReadinessLevel_ID",
            hidden: "true"
        }],
        imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>',
        viewrecords: true,
        autoencode: false,
        altRows: false,
        hoverrows: false,
        pager: "#pgrEmlpoyee",
        recordpos: "left",
        pgbuttons: false,
        rowNum: 2000,
        pginput: false,
        sortorder: "desc",
        toolbar: [true, "top"],
        gridComplete: function () {
            $(this).setGridParam({ datatype: "local", selarrrow: "false" });
            if (rowCount == $(this).getGridParam("records")) {
                employeeSearch.imagePreview();
                $("#divResultPanel").unblock();
                $("#waitplease").css({ display: "none" });
            }
        },
        onCellSelect: function (a, b, c, d) {
            switch (b) {
                case 8:
                    employeeSearch.LoadSelectedEmployee($(this).getRowData(a).Person_ID);
                    break
            }
            return false
        },
        ondblClickRow: function (a, b, c, d) {
            employeeSearch.LoadSelectedEmployee($(this).getRowData(a).Person_ID)
        }
    });
    $("#tblEmlpoyee").jqGrid("gridResize", {
        minWidth: 674,
        minHeight: 300
    }).toolbarButtonAdd("#t_tblEmlpoyee",
        {
            caption: "Excel",
            position: "last",
            align: (b == 'rtl' ? 'right' : 'left'),
            buttonicon: 'ui-icon-contact',
            onClickButton: function () {
                if (rowCount == 0) return false;
                var urlHandlers = "/opeReady/Handlers/ExcelExport/EmployeeExcel.ashx";
                var paramHandlers = "?pid=" + $("#txtEmployeeID").val() + "&pcid=" + $("#cboClassification").val() + '&rid=' + $("#ddlReadinessLabel").val() + '&pfn=' + $("#txtFirstName").val();
                paramHandlers += '&pln=' + $("#txtLastName").val() + '&jid=' + $("#cboJob").val() + "&uid=" + $("#hidUnitID").val() + "&ia=" + $("#chkActiveEmployee").attr("checked") + "&ir=" + $("#chkIsReadiness").attr("checked");
                $("#tblEmlpoyee").jqGrid('excelExport', { url: urlHandlers + paramHandlers });
            }
        });
};
employeeSearch.ShowIconParamsArea = function () {
    var a = $("#divSerchPanel");
    var b = $("#imgShowParams");
    if (a.is(":visible")) {
        a.toggle(function () {
            b.fadeIn("slow")
        })
    } else {
        a.toggle(function () {
            b.fadeOut("slow")
        })
    }
};
employeeSearch.imagePreview = function () {
    xOffset = 200;
    yOffset = 30;
    $(".tooltip").hover(function (a) {
        this.t = this.title;
        this.title = "";
        var b = this.t != "" ? "<br/>" + this.t : "";
        $("body").append("<p id='preview'><img src='" + this.src + "' width='145px' />" + b + "</p>");
        $("#preview").css("top", a.pageY - xOffset + "px").css("left", a.pageX + yOffset + "px").fadeIn("fast")
    }, function () {
        this.title = this.t;
        $("#preview").remove()
    });
    $(".tooltip").mousemove(function (a) {
        $("#preview").css("top", a.pageY - xOffset + "px").css("left", a.pageX + yOffset + "px")
    })
};
employeeSearch.getEmployeeSearchData = function (a) {
    var b = {
        Person_ID: $("#txtEmployeeID").val(),
        PersonCategory_ID: $("#cboClassification").val(),
        ReadinessLevel_ID: $("#ddlReadinessLabel").val(),
        Person_FirstName: $("#txtFirstName").val(),
        Person_LastName: $("#txtLastName").val(),
        Job_ID: $("#cboJob").val(),
        UnitID: $("#hidUnitID").val(),
        IsActive: $("#chkActiveEmployee").attr("checked"),
        IsReadiness: $("#chkIsReadiness").attr("checked"),
        QtyPerson: isNaN(a) ? null : a
    };
    PQ.Admin.WebService.EmployeeSearchWS.EmployeeSearch(b, function (a, b) {
        employeeSearch.ReceivedEmployeeSearchData(JSON.parse(getMain(a)).rows);
        //        employeeSearch.ReceivedEmployeeSearchData(a);
    }, function (a, b) {
        return false
    })
};
employeeSearch.ReceivedEmployeeSearchData = function (data) {
//    var parsedData = JSON.parse(data);
//    rowCount = parsedData.rows.length;
//    var thegrid = $("#tblEmlpoyee")[0];
//    thegrid.addJSONData(parsedData);
//    data = null;
        var thegrid = $("#tblEmlpoyee");
        thegrid.clearGridData();
        rowCount = data.length;
        for (var i = 0; i < data.length; i++)
            thegrid.addRowData(i + 1, data[i]);
    $("#waitplease").css({ display: "none" });
    $("#divResultPanel").unblock();
};
employeeSearch.getMain = function (a) {
    if (a.hasOwnProperty("d")) return a.d;
    else return a
};
employeeSearch.LoadSelectedEmployee = function (a) {
    if (a) {
        employeePages.getEmplDataForUpdate(a)
    }
}
