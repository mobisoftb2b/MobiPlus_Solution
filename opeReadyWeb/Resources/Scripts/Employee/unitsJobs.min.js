function applicationLoadHandler() { unitJob.Init() } function getJobHistoryData(e) { var t = getArgs(); if (t.eid) { PQ.Admin.WebService.PQWebService.CreateJobHistoryList(t.eid, function (e, t) { ReceivedJobHistoryData(JSON.parse(getMain(e)).rows) }, function (e, t) { alert("An error has occured retrieving data!") }) } } function ReceivedJobHistoryData(e) { var t = $("#tblJobHistory"); t.clearGridData(); for (var n = 0; n < e.length; n++) t.addRowData(n + 1, e[n]) } function getUnitHistoryData(e) { var t = getArgs(); if (t.eid) { PQ.Admin.WebService.PQWebService.CreateUnitHistoryList(t.eid, function (e, t) { ReceivedUnitHistoryData(JSON.parse(getMain(e)).rows) }, function (e, t) { alert("An error has occured retrieving data!") }) } } function ReceivedUnitHistoryData(e) { var t = $("#tblUnitHistory"); t.clearGridData(); for (var n = 0; n < e.length; n++) t.addRowData(n + 1, e[n]) } function ReloadGrids() { $("#tblJobHistory").GridUnload(); unitJob.CreateAndPopulateJobUnitGrid(); $("#tblUnitHistory").GridUnload(); unitJob.CreateAndPopulateUnitHistoryGrid() } function FuckingUnitDialogUp() { $("#ddlUnit").show(); $("#txtUnit").hide(); $("#divUnitHistoryEdit input:text").each(function () { $(this).val("") }); $("#btnUnitHistoryAdd").val($("#hidAdd").text()); divUnitHistoryEdit_Open(); return false } function OnClientPopup_Click(e, t) { $("#treeUnits").toggle(500); try { unitJob.CreateUnitTree(null) } catch (n) { return false } return false } function CloseJobHistoryEdit() { ReloadGrids(); $("#divJobHistoryEdit").dialog("destroy") } function CloseUnitHistoryEdit() { ReloadGrids(); $("#divUnitHistoryEdit").dialog("destroy") } function btnAddJobHistory_Click() { if (isJobHistoryFieldsRequare()) { var e = getArgs(); if (e.eid) { $("#waitplease").css({ display: "block" }); var t = { Person_ID: e.eid, Job_ID: $("#ddlJob").val(), JobStatus_ID: $("#ddlJobStatus").val(), Person2Job_FromDateStr: $("#txtFromDateJobHistory").val(), Person2Job_ToDateStr: $("#txtToDateJobHistory").val() }; PQ.Admin.WebService.EventRecords.Person2Job_Save(t, function (t) { if (t == "ok") { $("#tblJobHistory").GridUnload(); unitJob.CreateAndPopulateJobUnitGrid(); unitJob.ReloadCurrentActiveJob(e.eid); $("#divJobHistoryEdit").dialog("destroy") } }, function (e) { alert("An error has occured saving data!") }); $("#waitplease").css({ display: "none" }) } } return false } function btnUnitHistoryAdd_Click() { if (isUnitHistoryFieldsRequare()) { var e = getArgs(); if (e.eid) { $("#waitplease").css({ display: "block" }); var t = { Person_ID: e.eid, Unit_ID: $("#hidUnitID").val(), Person2Unit_FromDateStr: $("#txtFromUnitHistory").val(), Person2Unit_ToDateStr: $("#txtToUnitHistory").val() }; PQ.Admin.WebService.EventRecords.Person2Unit_Save(t, function (t) { if (t) { $("#tblUnitHistory").GridUnload(); unitJob.CreateAndPopulateUnitHistoryGrid(); unitJob.ReloadCurrentActiveUnit(e.eid); $("#divUnitHistoryEdit").dialog("destroy") } }, function (e) { alert("An error has occured saving data!") }); $("#waitplease").css({ display: "none" }) } } return false } function isJobHistoryFieldsRequare() { if ($("#ddlJob").val() == "0") { $("#ddlJob").addClass("ui-state-error").focus(); return false } else { $("#ddlJob").removeClass("ui-state-error", 500) } if ($("#ddlJobStatus").val().trim() == "0") { $("#ddlJobStatus").addClass("ui-state-error").focus(); return false } else $("#ddlJobStatus").removeClass("ui-state-error", 500); if ($("#txtFromDateJobHistory").val().trim() == "") { $("#txtFromDateJobHistory").addClass("ui-state-error").focus(); return false } else $("#txtFromDateJobHistory").removeClass("ui-state-error", 500); return true } function isUnitHistoryFieldsRequare() { if ($("#ddlUnit").val() == "" && $("#hidUnitID").val() == "") { $("#ddlUnit").addClass("ui-state-error").focus(); return false } else { $("#ddlUnit").removeClass("ui-state-error", 500) } if ($("#txtFromUnitHistory").val().trim() == "") { $("#txtFromUnitHistory").addClass("ui-state-error").focus(); return false } else $("#txtFromUnitHistory").removeClass("ui-state-error", 500); return true } var unitJob = { availableTags: null, rowObject: null }; unitJob.Init = function () { }; Sys.Application.add_load(applicationLoadHandler); unitJob.ReloadCurrentActiveJob = function (e) { try { PQ.Admin.WebService.PQWebService.EmploymentHistory_Select(e, this.ReloadCurrentActiveJobCallbackResult, this.ExecuteFailResult) } catch (t) { alert(t.Description) } }; unitJob.ReloadCurrentActiveJobCallbackResult = function (e) { if (e) { $("#divCurrJob").html(e); $("#waitplease").css({ display: "none" }) } }; unitJob.ReloadCurrentActiveUnit = function (e) { try { PQ.Admin.WebService.PQWebService.CurrentActiveUnit_Select(e, this.ReloadCurrentActiveUnitCallbackResult, this.ExecuteFailResult) } catch (t) { alert(t.Description) } }; unitJob.ReloadCurrentActiveUnitCallbackResult = function (e) { if (e) { $("#divCurrUnits").html(e); $("#waitplease").css({ display: "none" }) } }; unitJob.ExecuteFailResult = function (e) { }; unitJob.PopulateJobStatusCombo = function () { $("#ddlJobStatus>option").remove(); PQ.Admin.WebService.PQWebService.JobStatus_SelectAll(0, $("#lblGrtJobStatus").text(), function (e) { $(e).each(function () { $("#ddlJobStatus").append($("<option></option>").val(this["JobStatus_ID"]).html(this["JobStatus_ORGName"])) }) }, function (e) { }); return false }; unitJob.PopulateJobCategoryCombo = function () { $("#ddlJob>option").remove(); PQ.Admin.WebService.PQWebService.JobCategory_SelectAll($("#lblGrtJobCategory").text(), function (e) { $(e).each(function () { $("#ddlJob").append($("<option></option>").val(this["Job_ID"]).html(this["Job_Name"])) }) }, function (e) { }); return false }; unitJob.CreateAndPopulateJobUnitGrid = function () { var e; if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") e = "rtl"; else e = "ltr" } $("#divUnitJob").block({ css: { border: "0px" }, timeout: 500, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); $("#tblJobHistory").jqGrid({ direction: e, datatype: function (e) { getJobHistoryData(e) }, height: 150, autowidth: false, colNames: [$("div span[id=hidHistoryFromDate]").text(), $("div span[id=hidJobName]").text(), $("#hidJobStatus").text(), $("div span[id=hidHistoryToDate]").text(), $("div span[id=hidHistoryEdit]").text(), $("div span[id=hidHistoryJobGridDelete]").text(), "Job_ID", "Person2Job_isMainJob", "JobStatus_ID"], colModel: [{ name: "Person2Job_FromDateStr", index: "Person2Job_FromDateStr", formatter: "date", sortable: true, sorttype: "date", width: 125 }, { name: "Job_Name", index: "Job_Name", sortable: true, width: 250 }, { name: "JobStatus_ORGName", index: "JobStatus_ORGName", sortable: true, width: 110 }, { name: "Person2Job_ToDateStr", index: "Person2Job_ToDateStr", sortable: true, formatter: "date", sorttype: "date", width: 125 }, { name: "EditJob", index: "EditJob", sortable: false, edittype: "image", formatter: editFormatter, width: 32, align: "center" }, { name: "delJob", index: "delJob", sortable: false, edittype: "image", formatter: deleteFormatter, width: 45, align: "center" }, { name: "Job_ID", hidden: "true" }, { name: "Person2Job_isMainJob", hidden: "true" }, { name: "JobStatus_ID", hidden: "true"}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', datefmt: "d/m/Y", viewrecords: true, sortname: "Person2Job_FromDateStr", sortorder: "desc", autoencode: false, pginput: true, recordpos: "left", altRows: true, recordpos: "left", loadonce: true, pager: "#pgrJobHistory", toolbar: [true, "top"], hoverrows: false, pgbuttons: false, pginput: false, gridComplete: function () { $(this).setGridParam({ datatype: "local", selarrrow: "false" }) }, onCellSelect: function (e, t, n, r) { switch (t) { case 4: employeePages.imgEditCurrActiveJob_click($(this).getRowData(e)); break; case 5: return unitJob.DeleteJobHistory($(this).find(".jqgrow")[e - 1]); break } return false }, ondblClickRow: function (e, t, n, r) { employeePages.imgEditCurrActiveJob_click($(this).getRowData(e)) } }); $("#tblJobHistory").jqGrid("gridResize", { minWidth: 674, minHeight: 300 }); $("#tblJobHistory").toolbarButtonAdd("#t_tblJobHistory", { caption: $("#hidJU_btnAdd").text(), position: "first", align: e == "rtl" ? "right" : "left", buttonicon: "ui-icon-circle-plus", onClickButton: function () { employeePages.imgEditCurrActiveJob_click(null) } }) }; unitJob.CreateAndPopulateUnitHistoryGrid = function () { var e; if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") e = "rtl"; else e = "ltr" } $("#divUnitJob").block({ css: { border: "0px" }, timeout: 500, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); $("#tblUnitHistory").jqGrid({ direction: e, datatype: function (e) { getUnitHistoryData(e) }, height: 150, autowidth: false, colNames: [$("div span[id=hidHistoryUnitHstrFromDate]").text(), $("div span[id=hidUnitName]").text(), $("div span[id=hidHistoryUnitHstrToDate]").text(), $("div span[id=hidHistoryUnitGridEdit]").text(), $("div span[id=hidHistoryUnitGridDelete]").text(), "Unit_ID", "Person2Unit_isMainUnit", "Unit_Name"], colModel: [{ name: "Person2Unit_FromDateStr", index: "Person2Unit_FromDateStr", formatter: "date", sortable: true, sorttype: "date", width: 135 }, { name: "Unit_Name", index: "Unit_Name", sortable: true, width: 340 }, { name: "Person2Unit_ToDateStr", index: "Person2Unit_ToDateStr", sortable: true, formatter: "date", sorttype: "date", width: 135 }, { name: "EditUnit", index: "EditUnit", sortable: false, edittype: "image", formatter: editFormatter, width: 32, align: "center" }, { name: "delUnit", index: "delUnit", sortable: false, edittype: "image", formatter: deleteFormatter, width: 45, align: "center" }, { name: "Unit_ID", hidden: "true" }, { name: "Person2Unit_isMainUnit", hidden: "true" }, { name: "Unit_Name", hidden: "true"}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', datefmt: "d/m/Y", viewrecords: true, sortname: "Person2Unit_FromDate", sortorder: "desc", autoencode: false, pginput: true, recordpos: "left", altRows: true, recordpos: "left", loadonce: false, pager: "#pgrUnitHistory", toolbar: [true, "top"], pgbuttons: false, hoverrows: false, pginput: false, gridComplete: function () { $(this).setGridParam({ datatype: "local", selarrrow: "false" }) }, onCellSelect: function (e, t, n, r) { switch (t) { case 3: unitJob.imgEditUnitHistory_click($(this).find(".jqgrow")[e - 1]); break; case 4: return unitJob.DeleteUnitItemHistory($(this).find(".jqgrow")[e - 1]); break } return false }, ondblClickRow: function (e, t, n, r) { unitJob.imgEditUnitHistory_click($(this).find(".jqgrow")[e - 1]) } }).setGridParam({ rowNum: 10 }).trigger("reloadGrid"); $("#tblUnitHistory").jqGrid("gridResize", { minWidth: 674, minHeight: 300 }); $("#tblUnitHistory").toolbarButtonAdd("#t_tblUnitHistory", { caption: $("#hidJU_btnAdd_Edit").text(), position: "first", align: e == "rtl" ? "right" : "left", buttonicon: "ui-icon-circle-plus", onClickButton: function () { FuckingUnitDialogUp() } }); $("#tblUnitHistory").jqGrid("sortGrid", "Person2Unit_FromDateStr", true) }; unitJob.DeleteJobHistory = function (e) { if (e != undefined) { var t = getArgs(); var n = t.eid; this.rowObject = $(e); var r = $(e).find("td").eq(6).text(); var i = $(e).find("td").eq(8).text(); $("#ConfirmDeleteAttachment").dialog({ autoOpen: true, modal: true, resizable: false, closeOnEscape: true, height: 150, open: function (e, t) { $(this).parent().appendTo("form") }, buttons: { Ok: function (e) { e.preventDefault(); $("#waitplease").css({ display: "block" }); try { PQ.Admin.WebService.PQWebService.PersonJobHistory_Delete(n, r, i, function (e) { if (e) { $("#tblJobHistory").GridUnload(); unitJob.CreateAndPopulateJobUnitGrid(); unitJob.ReloadCurrentActiveJob(t.eid); $("#ConfirmDeleteAttachment").dialog("destroy") } }, this.ExecuteFailResult) } catch (e) { return false } return false }, Cancel: function (e) { e.preventDefault(); $(this).dialog("destroy"); return false } } }) } return false }; unitJob.imgEditUnitHistory_click = function (e) { if (e) { $(e).each(function () { if (!this.rowIndex) return; var e = $(this.cells[5]).text(); $("#txtFromUnitHistory").val($(this.cells[0]).text()); $("#txtToUnitHistory").val($(this.cells[2]).text()); if ($(this.cells[6]).text() == "True") $("#chkMainUnit").attr("checked", true); else $("#chkMainUnit").attr("checked", false); $("#ddlUnit").val($(this.cells[7]).text()).hide(); $("#txtUnit").val($(this.cells[7]).text()).show(); $("#hidUnitID").val($(this.cells[5]).text()); $("#btnUnitHistoryAdd").val($("#hidUpdate").text()) }) } else { $("#ddlUnit").val("").show(); $("#txtUnit").val("").hide(); $("#txtFromUnitHistory").val(""); $("#txtToUnitHistory").val(""); $("#chkMainUnit").attr("checked", false); $("#hidUnitID").val("") } divUnitHistoryEdit_Open(); return false }; unitJob.DeleteUnitItemHistory = function (e) { if (e != undefined) { var t = getArgs(); var n = t.eid; this.rowObject = $(e); var r = $(e).find("td").eq(5).text(); var i = $(e).find("td").eq(0).text(); $("#ConfirmDeleteAttachment").dialog({ autoOpen: true, modal: true, resizable: false, closeOnEscape: true, height: 150, open: function (e, t) { $(this).parent().appendTo("form") }, buttons: { Ok: function (e) { e.preventDefault(); $("#waitplease").css({ display: "block" }); try { PQ.Admin.WebService.PQWebService.Person2Unit_Delete(n, r, i, function (e) { if (e) { $("#tblUnitHistory").block({ css: { border: "0px" }, timeout: 250, overlayCSS: { backgroundColor: "#ffffff", opacity: .7} }).GridUnload(); unitJob.CreateAndPopulateUnitHistoryGrid(); unitJob.ReloadCurrentActiveUnit(n); $("#waitplease").css({ display: "none" }); $("#ConfirmDeleteAttachment").dialog("destroy") } }, this.ExecuteFailResult) } catch (e) { return false } return false }, Cancel: function (e) { e.preventDefault(); $(this).dialog("destroy"); return false } } }) } return false }; unitJob.CreateUnitTree = function (e) { var t = true; try { PQ.Admin.WebService.PQWebService.GetUserMenu(e, function (e) { if (e) { var t, n; if ($.cookie("lang")) { var r = $.cookie("lang"); if (r == "he-IL" || r == "ar") { t = "default-rtl"; n = true } else { t = "default"; n = false } } try { var i = $("#lblTreeLebel").text() == "" ? 0 : parseInt($("#lblTreeLebel").text()); var s = GetArrayTreeIDs(e, i); $("#treeUnits").jstree({ xml_data: { data: e }, plugins: ["themes", "xml_data", "ui", "types"], core: { rtl: n, initially_open: [s], animation: "200" }, themes: { theme: t }, types: { types: { file: { valid_children: ["default"], icon: { image: "/opeReady/Resources/images/active.png"} }, folder: { valid_children: "all", icon: { image: "/opeReady/Resources/images/close.png" }, select_node: function () { return false } }}} }).bind("select_node.jstree", function (e, t) { if (t.inst._get_children().length > 0) { e.stopImmediatePropagation(); return false } else { $("#hidUnitID").val(t.rslt.obj.get(0).id); $("#ddlUnit").val($(t.rslt.obj.find("a").get(0)).text()); $("#treeUnits").fadeOut("slow"); $("#ddlUnit").removeClass("ui-state-error", 100); return false } }) } catch (o) { } } }, function (e) { }) } catch (n) { alert(n.Description) } };