var rowCount, administrativeTasks = { availableTags: null, rowObject: null, rowCount: 0 }; function AdministrativeTasksEdit_click(i) { if (i) { var e = i.SubQualificationType_ID, t = unescape(i.PersonQualification_Remarks); $("#txtAdTaskFromDate").val(i.PersonQualification_FromDateStr), $("#ddlPersonSubQualification").val(parseInt(e)).hide(), $("#editorAdminTaskRemarks").val(t), $("#txtPersonSubQualification").val(i.SubQualificationType_Name).show(), $("#btnAddAdTask").val($("#hidUpdate").text()), divAdminTasksEdit_Open() } return !1 } function RequaredAdminTaskFields() { return "0" == $("#ddlPersonSubQualification").val() ? ($("#ddlPersonSubQualification").addClass("ui-state-error").focus(), !1) : ($("#ddlPersonSubQualification").removeClass("ui-state-error", 500), "" == $("#txtAdTaskFromDate").val().trim() ? ($("#txtAdTaskFromDate").addClass("ui-state-error").focus(), !1) : ($("#txtAdTaskFromDate").removeClass("ui-state-error", 500), void btnAddAdTask_Click())) } function btnAddAdTask_Click() { $("#waitplease").css({ display: "block" }); var i = getArgs(); if (i.eid) { var e = { Person_ID: parseInt(i.eid), PersonQualification_FromDateStr: $("#txtAdTaskFromDate").val(), PersonQualification_ToDateStr: null, SubQualificationType_ID: $("#ddlPersonSubQualification").val(), PersonQualification_Remarks: $("#editorAdminTaskRemarks").val() }; administrativeTasks.PersonSubQualification_Save(e) } } function AddNewAdminTask_Click() { return $(".input-medium").each(function () { $(this).val("") }), $("#editorAdminTaskRemarks").val(""), $("#ddlPersonSubQualification").val("0").show(), $("#txtPersonSubQualification").val("").hide(), divAdminTasksEdit_Open(), $("#btnAddAdminTask").val($("#hidAdd").text()), !1 } administrativeTasks.CreateAndPopulateAdminTasksGrid = function () { var i, e = !1; getArgs(); $.cookie("lang") && (i = "he-IL" == $.cookie("lang") || "ar" == $.cookie("lang") ? "rtl" : "ltr"), $("#divAdminTask").block({ css: { border: "0px" }, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }), $.cookie("userRole") && "6" == $.cookie("userRole") && (e = !0); var t = $("#tblAdminTask").jqGrid({ direction: i, datatype: function (i) { administrativeTasks.getAdminTaskData(i) }, height: 375, autowidth: !1, colNames: [$("div span[id=hidEventRecordsFromDate]").text(), $("div span[id=hidRequirementType]").text(), $("div span[id=hidRemarks]").text(), $("div span[id=hidEventRecordsEdit]").text(), $("div span[id=hidEventRecordsDelete]").text(), "SubQualificationType_ID", "PersonQualification_ToDate"], colModel: [{ name: "PersonQualification_FromDateStr", index: "PersonQualification_FromDateStr", formatter: "date", sortable: !0, sorttype: "date", width: 125 }, { name: "SubQualificationType_Name", index: "SubQualificationType_Name", sortable: !0, width: 180 }, { name: "PersonQualification_Remarks", index: "PersonQualification_Remarks", sortable: !0, sorttype: "text", width: 320 }, { name: "EditAdTask", index: "EditAdTask", sortable: !1, edittype: "image", formatter: editFormatter, width: 32, align: "center" }, { name: "DelAdTask", index: "DelAdTask", sortable: !1, hidden: e, edittype: "image", formatter: deleteFormatter, width: 45, align: "center" }, { name: "SubQualificationType_ID", hidden: "true", key: !0 }, { name: "PersonQualification_ToDateStr", hidden: "true"}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', datefmt: "d/m/Y", viewrecords: !0, sortorder: "desc", autoencode: !1, loadonce: !1, pginput: !0, recordpos: "left", altRows: !0, hoverrows: !1, toolbar: [!0, "top"], pager: $("#pgrAdminTask"), pgbuttons: !1, pginput: !1, gridComplete: function () { $(this).setGridParam({ datatype: "local", selarrrow: "false" }), rowCount == $(this).getGridParam("records") && ($("#waitplease").css({ display: "none" }), $("#divAdminTask").unblock()) }, onCellSelect: function (i, e, t, a) { switch (e) { case 3: AdministrativeTasksEdit_click($(this).getRowData(i)); break; case 4: return administrativeTasks.DeleteAdministrativeTask($(this).find(".jqgrow")[i - 1]) } return !1 }, ondblClickRow: function (i, e, t, a) { AdministrativeTasksEdit_click($(this).getRowData(i)) } }); t.jqGrid("sortGrid", "PersonQualification_FromDateStr", !0), t.jqGrid("gridResize", { minWidth: 674, minHeight: 300 }), "6" != $.cookie("userRole") && t.toolbarButtonAdd("#t_tblAdminTask", { caption: $("#hidAT_btnAdd").text(), position: "first", align: "rtl" == i ? "right" : "left", buttonicon: "ui-icon-circle-plus", onClickButton: function () { AddNewAdminTask_Click() } }) }, administrativeTasks.getAdminTaskData = function (i) { var e = getArgs(); e.eid && PQ.Admin.WebService.PQWebService.PersonSubQualification_Select(e.eid, function (i, e) { administrativeTasks.ReceivedAdminTaskData(JSON.parse(getMain(i)).rows) }, function (i, e) { alert("An error has occured retrieving data!") }) }, administrativeTasks.ReceivedAdminTaskData = function (i) { var e = $("#tblAdminTask"); e.clearGridData(), 0 == (rowCount = i.length) && $("#divAdminTask").unblock(); for (var t = 0; t < i.length; t++) e.addRowData(t + 1, i[t]) }, administrativeTasks.PersonSubQualification_Save = function (i) { PQ.Admin.WebService.PQWebService.PersonSubQualification_Save(i, function (i) { try { $("#tblAdminTask").GridUnload(), administrativeTasks.CreateAndPopulateAdminTasksGrid(), $("#divAdminTasksEdit").dialog("destroy"), $("#waitplease").css({ display: "none" }) } catch (i) { } }, function (i) { return !1 }) }, administrativeTasks.PopulateAdminTasksCombo = function () { return $("#ddlPersonSubQualification>option").remove(), PQ.Admin.WebService.PQWebService.SubQualificationType_SelectAll(0, $("#hidGrtSubQualificationType").text(), function (i) { $(i).each(function () { $("#ddlPersonSubQualification").append($("<option></option>").val(this.SubQualificationType_ID).html(this.SubQualificationType_Name)) }) }, function (i) { }), $("#waitplease").css({ display: "none" }), !1 }, administrativeTasks.DeleteAdministrativeTask = function (i) { if (void 0 != i) { var e = { Person_ID: getArgs().eid, PersonQualification_FromDateStr: $(i).find("td").eq(0).html(), SubQualificationType_ID: $(i).find("td").eq(5).html() }; $("#ConfirmDeleteAttachment").dialog({ autoOpen: !0, modal: !0, resizable: !1, closeOnEscape: !0, height: 150, open: function (i, e) { $(this).parent().appendTo("form") }, buttons: { Ok: function (i) { i.preventDefault(); try { PQ.Admin.WebService.PQWebService.PersonSubQualification_Delete(e, function (i) { i && ($("#tblAdminTask").block({ css: { border: "0px" }, timeout: 500, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }).GridUnload(), administrativeTasks.CreateAndPopulateAdminTasksGrid(), $("#waitplease").css({ display: "none" }), $("#ConfirmDeleteAttachment").dialog("destroy")) }, this.ExecuteFailResult) } catch (i) { return !1 } return !1 }, Cancel: function (i) { return i.preventDefault(), $(this).dialog("destroy"), !1 } } }) } return !1 };