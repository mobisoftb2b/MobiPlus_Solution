(function (a) { a.waitForImages = { hasImageProperties: ["backgroundImage", "listStyleImage", "borderImage", "borderCornerImage"] }; a.expr[":"].uncached = function (b) { return a(b).is('img[src!=""]') && !b.complete }; a.fn.waitForImages = function (b, c, d) { if (a.isPlainObject(arguments[0])) { c = b.each; d = b.waitForAll; b = b.finished } b = b || a.noop; c = c || a.noop; d = !!d; if (!a.isFunction(b) || !a.isFunction(c)) { throw new TypeError("An invalid callback was supplied.") } return this.each(function () { var e = a(this), f = []; if (d) { var g = a.waitForImages.hasImageProperties || [], h = /url\((['"]?)(.*?)\1\)/g; e.find("*").each(function () { var b = a(this); if (b.is("img:uncached")) { f.push({ src: b.attr("src"), element: b[0] }) } a.each(g, function (a, c) { var d = b.css(c); if (!d) { return true } var e; while (e = h.exec(d)) { f.push({ src: e[2], element: b[0] }) } }) }) } else { e.find("img:uncached").each(function () { f.push({ src: this.src, element: this }) }) } var i = f.length, j = 0; if (i == 0) { b.call(e[0]) } a.each(f, function (d, f) { var g = new Image; a(g).bind("load error", function (a) { j++; c.call(f.element, j, i, a.type == "load"); if (j == i) { b.call(e[0]); return false } }); g.src = f.src }) }) } })(jQuery)