function getArgs() { var e = new Object; var t = location.search.substring(1); var n = t.split("&"); for (var r = 0; r < n.length; r++) { var i = n[r].indexOf("="); if (i == -1) continue; var s = n[r].substring(0, i); var o = n[r].substring(i + 1); e[s] = unescape(o) } return e } function setTextContent(e, t) { while (e.firstChild !== null) e.removeChild(e.firstChild); e.appendChild(document.createTextNode(t)) } function checkRegexp(e, t, n) { if (!t.test(e.val())) { e.addClass("ui-state-error"); updateTips(n); return false } else { return true } } function checkLength(e, t, n, r) { if (e.val().length > r || e.val().length < n) { e.addClass("ui-state-error"); updateTips("Length of " + t + " must be between " + n + " and " + r + "."); return false } else { return true } } function updateTips(e) { tips.text(e).addClass("ui-state-error"); setTimeout(function () { tips.removeClass("ui-state-error", 1500) }, 500) } function GetTrainingEventTypeSelectRequiredField(e) { if (!e) return 0; var t = 0; PQ.Admin.WebService.EventRecords.TrainingEventType_SelectRequiredField(e, function (e) { if (!isNaN(e)) { return e } }, function (e) { t = 0 }) } function SetVisibilityText(e, t) { $("#waitplease").css({ display: "block" }); PQ.Admin.WebService.EventRecords.TrainingEventType_SelectRequiredField(e, function (e) { if (!isNaN(e)) { $("#hidEventTypeID").val(e); switch (parseInt(e)) { case 1: $(".divPerfomanceLevel").removeClass("no-display").addClass("selecting"); $(".divTotalScore").addClass("no-display").removeClass("selecting"); $(".divQuality").addClass("no-display").removeClass("selecting"); $("#txtQuality").val(""); $("#txtTotalScore").val(""); $("#divCumulativeQuantity").addClass("noDisplay"); break; case 2: $(".divTotalScore").removeClass("no-display").addClass("selecting"); $(".divPerfomanceLevel").addClass("no-display"); $(".divQuality").addClass("no-display").removeClass("selecting"); $("#ddlPerfomanceLevel").val("0"); $("#txtQuality").val(""); $("#divCumulativeQuantity").addClass("noDisplay"); $(".divPerfomanceLevel").removeClass("selecting"); break; case 3: $(".divQuality").removeClass("no-display").addClass("selecting"); $("#divCumulativeQuantity").removeClass("noDisplay"); $(".divPerfomanceLevel").addClass("no-display").removeClass("selecting"); $(".divTotalScore").addClass("no-display").removeClass("selecting"); $("#ddlPerfomanceLevel").val("0"); $("#txtTotalScore").val(""); break; default: $(".divPerfomanceLevel").addClass("no-display").removeClass("selecting"); $(".divTotalScore").addClass("no-display").removeClass("selecting"); $(".divQuality").addClass("no-display").removeClass("selecting"); $("#txtQuality").val(""); $("#txtTotalScore").val(""); $("#divCumulativeQuantity").addClass("noDisplay"); break } } }, function (e) { }); $("#waitplease").css({ display: "none" }) } function getMain(e) { if (e.hasOwnProperty("d")) return e.d; else return e } function scoutEditor(e) { $("#" + e).wysiwyg({ controls: { strikeThrough: { visible: true }, underline: { visible: true }, separator00: { visible: true }, justifyLeft: { visible: true }, justifyCenter: { visible: true }, justifyRight: { visible: true }, justifyFull: { visible: true }, separator01: { visible: true }, indent: { visible: true }, outdent: { visible: true }, separator02: { visible: true }, subscript: { visible: true }, superscript: { visible: true }, separator03: { visible: true }, undo: { visible: true }, redo: { visible: true }, separator04: { visible: true }, insertOrderedList: { visible: true }, insertUnorderedList: { visible: true }, insertHorizontalRule: { visible: true }, separator07: { visible: true }, cut: { visible: true }, copy: { visible: true }, paste: { visible: true}} }) } function XmlParser(e) { var t; if (window.DOMParser) { parser = new DOMParser; t = parser.parseFromString(e, "text/xml") } else { t = new ActiveXObject("Microsoft.XMLDOM"); t.async = "false"; t.loadXML(e) } return t } function editFormatter() { var e = new Image(32, 32); $(e).attr("src", "/opeReady/Resources/icons/edit.png"); $(e).attr("style", "cursor:pointer"); return e.outerHTML || (new XMLSerializer).serializeToString(e) } function deleteFormatter() { var e = new Image(32, 32); $(e).attr("src", "/opeReady/Resources/icons/trash.png"); $(e).attr("style", "cursor:pointer"); return e.outerHTML || (new XMLSerializer).serializeToString(e) } function attachFormatter() { var e = new Image(32, 32); $(e).attr("src", "/opeReady/Resources/icons/copydoc.png"); $(e).attr("style", "cursor:pointer"); return e.outerHTML || (new XMLSerializer).serializeToString(e) } function checkboxPic(e, t, n) { var r = new Image(32, 32); if (e) { $(r).attr("src", "/opeReady/Resources/images/24_tick.png") } else { $(r).attr("src", "/opeReady/Resources/images/empty.png") } return r.outerHTML || (new XMLSerializer).serializeToString(r) } function RaiseWarningAlert(e) { $("#divErrorMessageAlert").dialog({ autoOpen: true, resizable: false, closeOnEscape: true, modal: true, open: function (t, n) { $("#lblErrorMessageAlert").text(e) }, buttons: { Ok: function () { $(this).dialog("destroy") } } }) } function RaiseDialogSuccessMessage(e) { $("#dialogSuccessMessage").dialog({ autoOpen: true, resizable: true, closeOnEscape: true, modal: true, height: 150, open: function (t, n) { $("#lblSuccessMessage").text(e) }, buttons: { Ok: function () { $(this).dialog("destroy") } } }) } function ConfirmDelete() { var e = new Boolean; $("#ConfirmDeleteAttachment").dialog({ autoOpen: true, modal: true, resizable: false, closeOnEscape: true, height: 150, open: function (e, t) { $(this).parent().appendTo("form") }, buttons: { Ok: function (t) { e = true }, Cancel: function (t) { $(this).dialog("destroy"); e = false } } }); return e } function htmlResizablePopUp(e, t, n, r, i) { var s = new Array; s[0] = t; s[1] = n; retVal = window.showModalDialog(e, s, "dialogHeight:" + r + "px;unadorned:0;dialogWidth:" + i + "px;edge:Raised;center:Yes;help:No;resizable:Yes;status:No;scroll:No;"); return false } function isValidEmailAddress(e) { var t = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i); return t.test(e) } function isNumberKey(e) { var t = e.which ? e.which : event.keyCode; if (t > 31 && (t < 48 || t > 57)) return false; return true } function ColorAreaSelector(e) { var t; switch (e) { case 1: t = 80; break; case 2: t = 50; break; case 3: t = 20; break } return t } function getAge(e) { function n(e) { return e % 4 == 0 && (e % 100 != 0 || e % 400 == 0) } var t = new Date; var r = Math.floor((t.getTime() - e.getTime()) / 1e3 / 60 / 60 / 24); var i = 0; for (var s = e.getFullYear(); s <= t.getFullYear(); s++) { var o = n(s) ? 366 : 365; if (r >= o) { r -= o; i++ } } return i } function GetArrayTreeIDs(e, t) { var n = new Array; var r; var i = XmlParser(e); switch (t) { case 0: $(i).find("item").each(function () { n.push("#" + $(this).attr("id")) }); break; case 1: $(i).find("item").each(function () { if ($(this).attr("parent_id") == "") { var e = $(this).attr("id"); n.push("#" + e) } }); break; case 2: r = $(i).find('item:[parent_id=""]').attr("id"); for (var s = 0; s < r.length; s++) { $(i).find("item").each(function () { if ($(this).attr("parent_id") == r[s]) { var e = $(this).attr("id"); n.push("#" + e) } }) } break; default: $(i).find("item").each(function () { n.push("#" + $(this).attr("id")) }); break } return n } function checkFileExtension(e, t) { var n = new Array; if (e != null) { var r = e.value; if (r.indexOf(".") == -1) return false; var i = r.substring(r.lastIndexOf(".") + 1).toLowerCase() } else { var i = t.toLowerCase() } n[0] = "jpg"; n[1] = "jpeg"; n[2] = "bmp"; n[3] = "png"; n[4] = "gif"; n[5] = "tif"; n[6] = "tiff"; for (var s = 0; s < n.length; s++) { if (i == n[s]) return true } RaiseWarningAlert("The file extension " + i.toUpperCase() + " is not allowed!"); return false } function checkNotAllowedFileExtension(e, t) { var n = new Array; if (e != null) { var r = e.value; if (r.indexOf(".") == -1) return false; var i = r.substring(r.lastIndexOf(".") + 1).toLowerCase() } else { var i = t.toLowerCase() } n[0] = "exe"; n[1] = "com"; n[2] = "bat"; n[3] = "js"; n[4] = "sys"; n[5] = "vb"; n[6] = "vbs"; n[7] = "dll"; n[8] = "zip"; n[9] = "vbe"; n[10] = "rar"; n[11] = "cmd"; n[12] = "drv"; n[13] = "jse"; n[14] = "msi"; n[15] = "obj"; n[16] = "ocx"; n[17] = "reg"; for (var s = 0; s < n.length; s++) { if (i == n[s]) { RaiseWarningAlert("The file extension " + i.toUpperCase() + " is not allowed!"); return false } } return true } function arrayToCSV(e) { var t = []; var n = []; for (var r = 0, i = e.length; r < i; r++) { var s = e[r]; var o = []; for (var u in s) { if (!s.hasOwnProperty(u)) continue; if (r === 0) t.push(prepareValueForCSV(u)); o.push(prepareValueForCSV(s[u])) } n.push(o.join(",")) } n.unshift(t.join(",")); return n.join("\n") } function prepareValueForCSV(e) { e = "" + e; e = e.replace(/"/g, '""'); return '"' + e + '"' } (function (e) { e.fn.dropDownBlock = function (t, n) { var r = { speed: "fast", top: e(this).height(), left: 0 }, i = e.extend(r, n), s = e(this), t = e(t); s.css({ outline: "none" }); s.click(function (n) { n.preventDefault(); e(t).css({ position: "absolute", top: s.offset().top + i["top"] + "px", left: s.offset().left + i["left"] + "px" }); if (e(t).is(":visible")) e(t).fadeOut(i["speed"]); else e(t).fadeIn(i["speed"]); this.focus() }); s.blur(function () { e(t).fadeOut(i["speed"]) }) } })(jQuery); (function (e) { e.fn.openCloseBlocks = function (t, n) { var r = { speed: "normal" }, i = e.extend(r, n), s = e(this), o = e(t); if (!o) return; s.each(function (t) { e(this).click(function (n) { n.preventDefault(); e(o[t]).slideToggle(i["speed"]) }) }) } })(jQuery); (function (e) { e.fn.addXbutton = function (t) { var n = { img: "/Ruka2/resourses/images/x.gif" }; var r = e.extend(n, t); $obj = e(this); e(this).each(function (t) { e(this).after(e('<input type="image" id="xButton' + t + '" src="' + r["img"] + '" />').css({ display: "none", cursor: "pointer", marginLeft: "-15px", width: "10px", height: "10px", border: "0" }).click(function () { $obj.val("").focus(); e("#xButton" + t).hide(); return false })).keyup(function () { if (e(this).val().length > 0) { e("#xButton" + t).show() } else { e("#xButton" + t).hide() } if (e(this).val() != "") e("#xButton" + t).show() }) }) } })(jQuery); (function (e) { e.fn.AddDDLbutton = function (t) { var n = { img: "/opeReady/Resources/images/ddl.png" }; var r = e.extend(n, t); $obj = e(this); e(this).each(function () { e(this).after(e('<input type="image" style="cursor:pointer" id="xButton" src="' + r["img"] + '" />').addClass("input-ddl")) }) } })(jQuery); (function (e) { function t() { this.Values = new Object; this.load() } e.extend(t.prototype, { load: function () { if (window.location.search.length <= 1) { return } var e = window.location.search.substring(1); var t = e.split("&"); for (var n = 0; n < t.length; n++) { this.Values[t[n].split("=")[0].toLowerCase()] = decodeURIComponent(t[n].split("=")[1]) } }, get: function (e) { return this.Values[e.toLowerCase()] ? this.Values[e.toLowerCase()] : "" }, set: function (e, t) { this.Values[e.toLowerCase()] = t; return this } }); t.prototype.toString = function () { var e = []; for (var t in this.Values) { e.push(t + "=" + encodeURIComponent(this.Values[t])) } return "?" + e.join("&") }; e.Params = new t })(jQuery); $.fn.ForceNumericOnly = function () { return this.each(function () { $(this).keydown(function (e) { var t = e.charCode || e.keyCode || 0; return t == 8 || t == 9 || t == 46 || t >= 37 && t <= 40 || t >= 48 && t <= 57 || t >= 96 && t <= 105 || t == 110 || t == 190 }) }) }; String.prototype.bool = function () { return /^true$/i.test(this) };