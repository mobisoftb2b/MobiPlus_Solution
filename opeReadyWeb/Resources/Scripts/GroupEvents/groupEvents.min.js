function SetVisibilityText(a) { $("#divPersonDetails").block({ css: { border: "0px" }, overlayCSS: { backgroundColor: "#ffffff", opacity: .7} }); if (!isNaN(a)) { a = parseInt(a); switch (a) { case 1: $("#divPerfomanceLevel").css({ display: "block" }); $("#divTotalScore").css({ display: "none" }); $("#divQuality").css({ display: "none" }); $("#txtQuantityUpd").val(""); $("#txtEventScoreUpd").val(""); break; case 2: $("#divTotalScore").css({ display: "block" }); $("#divPerfomanceLevel").css({ display: "none" }); $("#divQuality").css({ display: "none" }); $("#ddlPerfomanceLevelUpdate").val("0"); $("#txtQuantityUpd").val(""); break; case 3: $("#divQuality").css({ display: "block" }); $("#divPerfomanceLevel").css({ display: "none" }); $("#divTotalScore").css({ display: "none" }); $("#ddlPerfomanceLevelUpdate").val("0"); $("#txtEventScoreUpd").val(""); break } $("#divPersonDetails").unblock() } } function selectFormatter(a, b, c) { var d = document.createElement("select"); try { d.value = a == undefined ? "" : a; d.id = "ddl" + c.Person_ID; $(d).addClass("select"); $(optionReadiness).each(function () { $(d).append($("<option></option>").val(this["ExecutionLevel_ID"]).html(this["ExecutionLevel_ORGName"])) }) } catch (e) { } return d.outerHTML || (new XMLSerializer).serializeToString(d) } function textBoxQuantityFormatter(a, b, c) { var d = document.createElement("input"); try { d.type = "text"; d.id = "txtQty" + c.Person_ID; $(d).addClass("input-medium"); d.value = a == undefined ? "" : a; d.onkeypress = "return isNumberKey(event)" } catch (e) { } return d.outerHTML || (new XMLSerializer).serializeToString(d) } function textBoxScoreFormatter(a, b, c) { var d = document.createElement("input"); d.type = "text"; d.id = "txtScore" + c.Person_ID; $(d).addClass("input-medium"); d.value = a == undefined ? "" : a; d.onkeypress = "return isNumberKey(event)"; return d.outerHTML || (new XMLSerializer).serializeToString(d) } function deleteEventSubjects(a) { var b; $(a).each(function () { $(this).append('<div class="click_to_close"></div>') }); $(".click_to_close").click(function () { b = $(this).parent(); var a = { TrainingEventCategory_ID: $(this).parent().attr("tecat"), TrainingEvent_ID: $(this).parent().attr("te") }; try { PQ.Admin.WebService.PQWebService.DeleteEventSubject(a, function (a) { if (a) { b.fadeOut("slow", function () { $(this).remove() }) } }, this.ExecuteFailResult) } catch (c) { RaiseWarningAlert(c.Description) } }) } var rowCount = 0; var groupEvent = { availableTags: null, rowObject: null, selctedID: null, rowCount: 0 }; groupEvent.Init = function () { }; groupEvent.TrainingEvent2Categories_Select = function (a) { try { PQ.Admin.WebService.EventRecords.TrainingEvent2Categories_SelectXML(a, function (a) { if (a) { divEmployeeEvaluation.innerHTML = a; SetDeleteEventSubjects() } }, this.ExecuteFailResult) } catch (b) { RaiseWarningAlert(b.Description) } }; groupEvent.AddEventSubjectsGrid = function (a) { var b; if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") b = "rtl"; else b = "ltr" } $("#divAddEventSubject").block({ css: { border: "0px" }, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); $("#tblEventSubjects").jqGrid({ direction: b, datatype: function (b) { groupEvent.getEventSubjectsData(a) }, height: "auto", autowidth: true, colNames: ["ID", $("div span[id=hidTrainingEventCategoryName]").text()], colModel: [{ name: "TrainingEventCategory_ID", index: "TrainingEventCategory_ID", formatter: "integer", key: true, hidden: true }, { name: "TrainingEventCategory_Name", index: "TrainingEventCategory_Name", sortable: true, sorttype: "text", width: 350}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', viewrecords: true, sortorder: "", recordpos: "left", pager: "#pgrUnitHistory", pgbuttons: false, pginput: false, altRows: true, multiselect: true, recordpos: "left", sortname: "TrainingEventCategory_ID", loadonce: true, gridComplete: function () { $(this).setGridParam({ datatype: "local" }); $(this).trigger("reloadGrid"); $("#divAddEventSubject").unblock(); $("#waitplease").css({ display: "none" }) }, onSelectAll: function (a, b) { if (b) groupEvent.selctedID = a; else groupEvent.selctedID = null; return false } }).jqGrid("navGrid", "#pgrUnitHistory", { add: false, del: false, edit: false, position: "right" }) }; groupEvent.getEventSubjectsData = function (a) { PQ.Admin.WebService.EventRecords.TrainingEventCategory_Select(a, function (a, b) { groupEvent.ReceivedEventSubjectsData(JSON.parse(getMain(a)).rows) }, function (a) { }) }; groupEvent.ReceivedEventSubjectsData = function (a) { var b = $("#tblEventSubjects"); b.clearGridData(); for (var c = 0; c < a.length; c++) b.addRowData(c + 1, a[c]) }; groupEvent.getSelectedIDs = function () { var a = new Array; var b = new Array; $("#waitplease").css({ display: "block" }); a = $("#tblEventSubjects").getGridParam("selarrrow"); if (a[0] == undefined) a[0] = "0"; try { for (var c = 0; c < a.length; c++) { b[c] = { TrainingEventCategory_ID: a[c], TrainingEventCategory_Name: $("#tblEventSubjects").getRowData(a[c]).TrainingEventCategory_Name} } PQ.Admin.WebService.EventRecords.TrainingEventSubject_Display($("#ddlTrainingEventType").val(), b, function (a) { if (a) { divEmployeeEvaluation.innerHTML = a; $("#waitplease").css({ display: "none" }); $("#divAddEventSubject").dialog("close"); SetDeleteEventSubjects() } }, function (a) { }) } catch (d) { } }; groupEvent.EmlpoymentEvaluationsGrid = function (a, b) { var c; b = b == "" ? 0 : parseInt(b); $("#ConfirmDeleteAttachment").dialog("destroy"); if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") c = "rtl"; else c = "ltr" } $("#divGroupEvents").block({ css: { border: "0px" }, overlayCSS: { backgroundColor: "#ffffff", opacity: .7 }, message: "" }); $("#tblEmlpoymentEvaluation").jqGrid({ direction: c, datatype: function (b) { groupEvent.getEmlpoymentEvaluationData(a) }, height: 280, autowidth: false, colNames: [$("#hiddFuildCaptions span[id=hidEmployeeID]").text(), $("#hiddFuildCaptions span[id=hidFirstName]").text(), $("#hiddFuildCaptions span[id=hidLastName]").text(), $("#hiddFuildCaptions span[id=hidJob]").text(), $("#hiddFuildCaptions span[id=hidUnit]").text(), $("#hiddFuildCaptions span[id=hidReadinessLabel]").text(), $("#hiddFuildCaptions span[id=hidEventScore]").text(), $("#hiddFuildCaptions span[id=hidQuantity]").text(), $("#hiddFuildCaptions span[id=hidEventRecordsDelete]").text(), "ExecutionLevel_ID"], colModel: [{ name: "Person_ID", index: "Person_ID", key: true, sortable: true, sorttype: "int", width: 100 }, { name: "Person_FirstName", index: "Person_FirstName", sortable: true, sorttype: "text", width: 100 }, { name: "Person_LastName", index: "Person_LastName", sortable: true, sorttype: "text", width: 100 }, { name: "Job_Name", index: "Job_Name", sortable: true, sorttype: "text", width: 120 }, { name: "Unit_Name", index: "Unit_Name", sortable: true, sorttype: "text", width: 120 }, { name: "ExecutionLevel_ORGName", index: "ExecutionLevel_ORGName", editable: true, sortable: true, sorttype: "text", width: 160 }, { name: "TrainingEvent2Person_Score", index: "TrainingEvent2Person_Score", sortable: true, sorttype: "int", width: 120 }, { name: "TrainingEvent2Person_Quantity", index: "TrainingEvent2Person_Quantity", sortable: true, sorttype: "int", width: 120 }, { name: "DeleteEmployee", index: "DeleteEmployee", sortable: false, width: 60, formatter: deleteFormatter, align: "center" }, { name: "ExecutionLevel_ID", hidden: "true"}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', datefmt: "d/m/Y", viewrecords: true, sortorder: "asc", autoencode: false, loadonce: true, hoverrows: false, toolbar: [$("#ddlTrainingEventType").val() == "0" ? false : true, "top"], pgbuttons: false, pginput: false, recordpos: "left", pager: "#prgEmlpoymentEvaluation", altRows: true, gridComplete: function () { $(this).setGridParam({ datatype: "local", selarrrow: "false" }); var a = $(this).jqGrid("getDataIDs"); if (rowCount == $(this).getGridParam("records")) { $(this).jqGrid("sortGrid", "Person_ID", true); $("#divGroupEvents").unblock(); rowCount = 0; $("#waitplease").css({ display: "none" }) } switch (b) { case 0: $(this).jqGrid("hideCol", ["ExecutionLevel_ORGName", "TrainingEvent2Person_Score", "TrainingEvent2Person_Quantity"]); break; case 1: $(this).jqGrid("hideCol", ["TrainingEvent2Person_Score", "TrainingEvent2Person_Quantity"]); break; case 2: $(this).jqGrid("hideCol", ["ExecutionLevel_ORGName", "TrainingEvent2Person_Quantity"]); break; case 3: $(this).jqGrid("hideCol", ["ExecutionLevel_ORGName", "TrainingEvent2Person_Score"]); break } }, onCellSelect: function (a, b, c, d) { if (b == 8) { return groupEvent.TrainingEvent2Person_Delete($(this).getRowData(a).Person_ID) } return false }, ondblClickRow: function (a, c, d, e) { SetVisibilityText(b); groupEvent.TrainingEventGroup2Person_Update($(this).getRowData(a)) } }); $("#tblEmlpoymentEvaluation").jqGrid("gridResize", { minWidth: 674, minHeight: 300 }); $("#tblEmlpoymentEvaluation").toolbarButtonAdd("#t_tblEmlpoymentEvaluation", { caption: $("#hidGroupEvent_btnAddEmployee").text(), position: "first", align: c == "rtl" ? "right" : "left", buttonicon: "ui-icon-circle-plus", onClickButton: function () { AddEmployeeForEvent() } }) }; groupEvent.getEmlpoymentEvaluationData = function (a) { if (a) groupEvent.ReceivedEmlpoymentEvaluationData(JSON.parse(getMain(a)).rows) }; groupEvent.ReceivedEmlpoymentEvaluationData = function (a) { var b = $("#tblEmlpoymentEvaluation"); b.clearGridData(); rowCount = a.length; for (var c = 0; c < a.length; c++) b.addRowData(c + 1, a[c]) }; groupEvent.HightLigthRowData = function (a) { if (a) { $("#txtTotalScore").val(a.TrainingEvent2Person_Score); $("#ddlPerfomanceLevel").val(a.ExecutionLevel_ID); $("#txtQuality").val(a.TrainingEvent2Person_Quantity); $("#txtRemarksEvaluation").val(a.TrainingEvent2Person_Remarks); $("#divGeneralEvaluation").fadeIn("slow"); $("html, body").animate({ scrollTop: $("#divGeneralEvaluation").offset().top }, 500) } }; groupEvent.TrainingEventGroup2Person_Update = function (a) { if (a) { $("#txtEmployeeIDUpd").val(a.Person_ID); $("#txtFirstNameUpd").val(a.Person_FirstName); $("#txtLastNameUpd").val(a.Person_LastName); $("#txtUnitUpd").val(a.Unit_Name); $("#txtJobUpd").val(a.Job_Name); $("#ddlPerfomanceLevelUpdate").val(a.ExecutionLevel_ID); $("#txtQuantityUpd").val(a.TrainingEvent2Person_Quantity); $("#txtEventScoreUpd").val(a.TrainingEvent2Person_Score); divPersonDetails_Open() } }; groupEvent.CreateUnitTree = function (a) { try { PQ.Admin.WebService.PQWebService.GetUserMenu(a, function (a) { if (a) { var b, c; if ($.cookie("lang")) { var d = $.cookie("lang"); if (d == "he-IL" || d == "ar") { b = "default-rtl"; c = true } else { b = "default"; c = false } } try { var e = GetArrayTreeIDs(a); $("#treeUnits").jstree({ xml_data: { data: a }, plugins: ["themes", "xml_data", "ui", "types"], core: { rtl: c, initially_open: [e], animation: "100" }, themes: { theme: b }, types: { types: { file: { valid_children: ["default"], icon: { image: "/opeReady/Resources/images/active.png"} }, folder: { valid_children: "all", icon: { image: "/opeReady/Resources/images/close.png" }, select_node: function () { return false } }}} }).bind("loaded.jstree", function (a, b) { $("#treeUnits").jstree("open_all") }).bind("select_node.jstree", function (a, b) { $("#hidUnitID").val(b.rslt.obj.get(0).id); $("#ddlUnit").val($(b.rslt.obj.find("a").get(0)).text()).removeClass("ui-state-error", 100); groupEvent.PopulateJobsListCombo(b.rslt.obj.get(0).id); $("#treeUnits").fadeOut("slow"); return false }) } catch (f) { } } }, function () { }) } catch (b) { RaiseWarningAlert(b.Description) } }; groupEvent.PopulateJobsListCombo = function (a) { $("#ddlJob").addClass("ui-autocomplete-loading"); $("#ddlJob>option").remove(); a = a == "" ? 0 : a; try { PQ.Admin.WebService.PQWebService.GetJobByUnitID(a, $("#hidGroupEvent_grtSelectJobs").text(), function (a) { $(a).each(function () { $("#ddlJob").append($("<option></option>").val(this["Job_ID"]).html(this["Job_Name"])) }); $("#ddlJob").removeClass("ui-autocomplete-loading") }, function (a) { }) } catch (b) { } $("#waitplease").css({ display: "none" }); return false }; groupEvent.GetEmlpoyeeGrid = function (a, b) { var c; var d; b = b == "" ? 0 : parseInt(b); if ($.cookie("lang")) { if ($.cookie("lang") == "he-IL" || $.cookie("lang") == "ar") c = "rtl"; else c = "ltr" } $("#tlbEmlpoyee").jqGrid({ direction: c, datatype: function (b) { groupEvent.getEmlpoyeeListData(a) }, height: 375, width: 800, colNames: [$("#hiddFuildCaptions span[id=hidEmployeeID]").text(), $("#hiddFuildCaptions span[id=hidFirstName]").text(), $("#hiddFuildCaptions span[id=hidLastName]").text(), $("#hidReadinessLabel").text(), $("#hidEventScore").text(), $("#hidQuantity").text(), "", ""], colModel: [{ name: "Person_ID", index: "Person_ID", key: true, sortable: true, sorttype: "int", width: 100 }, { name: "Person_FirstName", index: "Person_FirstName", sortable: true, sorttype: "text", width: 100 }, { name: "Person_LastName", index: "Person_LastName", sortable: true, sorttype: "text", width: 100 }, { name: "ReadinessLevel_Name", index: "ReadinessLevel_Name", formatter: selectFormatter, width: 150 }, { name: "TrainingEvent2Person_Score", index: "TrainingEvent2Person_Score", width: 100, formatter: textBoxScoreFormatter }, { name: "TrainingEvent2Person_Quantity", index: "TrainingEvent2Person_Quantity", width: 100, formatter: textBoxQuantityFormatter }, { name: "Job_Name", hidden: "true" }, { name: "Unit_Name", hidden: "true"}], imgpath: '<%= ResolveClientUrl("~/Resources/Styles/redmon/images") %>', datefmt: "d/m/Y", viewrecords: true, sortorder: "asc", autoencode: false, loadonce: true, recordpos: "left", scrollTimeout: 500, pager: "#pgrEmployee", pgbuttons: false, pginput: false, multiselect: true, gridComplete: function () { $(this).setGridParam({ datatype: "local" }); var a = $(this).jqGrid("getDataIDs"); if (rowCount == $(this).getGridParam("records")) { $("#waitplease").css({ display: "none" }); $(this).trigger("reloadGrid"); $(this).jqGrid("sortGrid", "Person_ID", true); rowCount = 0; switch (b) { case 0: $(this).jqGrid("hideCol", ["ReadinessLevel_Name", "TrainingEvent2Person_Score", "TrainingEvent2Person_Quantity"]); break; case 1: $(this).jqGrid("hideCol", ["TrainingEvent2Person_Score", "TrainingEvent2Person_Quantity"]); break; case 2: $(this).jqGrid("hideCol", ["ReadinessLevel_Name", "TrainingEvent2Person_Quantity"]); break; case 3: $(this).jqGrid("hideCol", ["ReadinessLevel_Name", "TrainingEvent2Person_Score"]); break } } }, onSelectAll: function (a, b) { if (b) groupEvent.selctedID = a; else groupEvent.selctedID = null; return false }, onSelectRow: function (a) { if (a && a !== d) { $(this).jqGrid("restoreRow", d); $(this).jqGrid("editRow", a, true); d = a } } }); $("#tlbEmlpoyee").jqGrid("gridResize", { minWidth: 900, minHeight: 300 }) }; groupEvent.getEmlpoyeeListData = function (a) { if (a) { try { var b = $("#tblEmlpoymentEvaluation").getDataIDs(); PQ.Admin.WebService.EmployeeSearchWS.EmployeeSearching(a, b, function (a) { groupEvent.ReceivedEmployeeListData(JSON.parse(getMain(a)).rows) }, function (a, b) { RaiseWarningAlert("An error has occured retrieving data!") }) } catch (c) { } } }; groupEvent.ReceivedEmployeeListData = function (a) { var b = $("#tlbEmlpoyee"); b.clearGridData(); for (var c = 0; c < a.length; c++) b.addRowData(c + 1, a[c]) }; groupEvent.getSelectedEmployeeIDs = function () { var a = new Boolean; var b = new Array; var c = new Array; $("#waitplease").css({ display: "block" }); b = $("#tlbEmlpoyee").getGridParam("selarrrow"); if (b[0] == undefined) b[0] = "0"; try { $(b).each(function () { var b = $("#tlbEmlpoyee").getRowData(this); switch ($("#hidEventTypeID").val()) { case "0": try { c.push({ TrainingEvent_Date: $("#txtGroupEventDate").val(), Person_FirstName: b.Person_FirstName, Person_LastName: b.Person_LastName, Job_Name: b.Job_Name, Unit_Name: b.Unit_Name, TrainingEventType_ID: $("#ddlTrainingEventType").val(), Person_ID: b.Person_ID }) } catch (d) { } break; case "1": if ($(b.ReadinessLevel_Name).find(":selected").val() == "0") { $("#ddl" + b.Person_ID).addClass("ui-state-error"); a = false; $("#waitplease").css({ display: "none" }) } else { $("#ddl" + b.Person_ID).removeClass("ui-state-error"); try { c.push({ ExecutionLevel_ID: $(b.ReadinessLevel_Name).find(":selected").val(), ExecutionLevel_ORGName: $(b.ReadinessLevel_Name).find(":selected").text(), TrainingEvent_Date: $("#txtGroupEventDate").val(), Person_FirstName: b.Person_FirstName, Person_LastName: b.Person_LastName, Job_Name: b.Job_Name, Unit_Name: b.Unit_Name, TrainingEventType_ID: $("#ddlTrainingEventType").val(), Person_ID: b.Person_ID }) } catch (d) { } } break; case "2": if ($("#txtScore" + b.Person_ID).val() == "") { $("#txtScore" + b.Person_ID).addClass("ui-state-error"); a = false; $("#waitplease").css({ display: "none" }) } else { $("#txtScore" + b.Person_ID).removeClass("ui-state-error"); try { c.push({ TrainingEvent_Date: $("#txtGroupEventDate").val(), TrainingEventType_ID: $("#ddlTrainingEventType").val(), Person_ID: b.Person_ID, Person_FirstName: b.Person_FirstName, Person_LastName: b.Person_LastName, Job_Name: b.Job_Name, Unit_Name: b.Unit_Name, TrainingEvent2Person_Score: $("#txtScore" + b.Person_ID).val() == "" ? null : $("#txtScore" + b.Person_ID).val() }) } catch (d) { } } break; case "3": if ($("#txtQty" + b.Person_ID).val() == "") { $("#txtQty" + b.Person_ID).addClass("ui-state-error"); a = false; $("#waitplease").css({ display: "none" }) } else { $("#txtQty" + b.Person_ID).removeClass("ui-state-error"); try { c.push({ TrainingEvent_Date: $("#txtGroupEventDate").val(), TrainingEventType_ID: $("#ddlTrainingEventType").val(), Person_ID: b.Person_ID, Person_FirstName: b.Person_FirstName, Person_LastName: b.Person_LastName, Job_Name: b.Job_Name, Unit_Name: b.Unit_Name, TrainingEvent2Person_Quantity: $("#txtQty" + b.Person_ID).val() == "" ? null : $("#txtQty" + b.Person_ID).val() }) } catch (d) { } } break } }); if (a) { try { PQ.Admin.WebService.EventRecords.TrainingGroupEvent2Person_Save(c, function (a) { if (a) { $("#tblEmlpoymentEvaluation").GridUnload(); groupEvent.EmlpoymentEvaluationsGrid(a, $("#hidEventTypeID").val()); $("#divEmployeeForEvent").dialog("destroy") } $("#waitplease").css({ display: "none" }) }, function (a) { $("#waitplease").css({ display: "none" }); $("#divEmployeeForEvent").dialog("destroy") }) } catch (d) { } } } catch (d) { } }; groupEvent.GetPerfomanceLevelArray = function () { var a = "{"; try { PQ.Admin.WebService.EventRecords.PerfomanceLevel_SelectAll($("#hidGroupEvent_GrtPerfomanceLabel").text(), function (b) { optionReadiness = b; $(b).each(function () { a += this.ExecutionLevel_ID + ':"' + this.ExecutionLevel_ORGName + '",' }); a = a.substring(0, a.length - 1); a += "}"; optionsArray = a }, function (a) { }) } catch (b) { } }; groupEvent.TrainingEvent2Person_Delete = function (a) { if (a != undefined) { $("#ConfirmDeleteAttachment").dialog({ autoOpen: true, modal: true, resizable: false, closeOnEscape: true, height: 150, open: function (a, b) { $(this).parent().appendTo("form") }, buttons: { Ok: function (b) { b.preventDefault(); $("#waitplease").css({ display: "block" }); $(this).dialog("destroy"); try { PQ.Admin.WebService.EventRecords.TrainingGroupEvent_Delete(a, function (a) { if (a) { $("#tblEmlpoymentEvaluation").GridUnload(); groupEvent.EmlpoymentEvaluationsGrid(a, $("#hidEventTypeID").val()) } $("#waitplease").css({ display: "none" }) }, function (a) { $("#waitplease").css({ display: "none" }); return false }) } catch (b) { $("#waitplease").css({ display: "none" }); return false } return false }, Cancel: function (a) { a.preventDefault(); $(this).dialog("destroy"); return false } } }) } }; groupEvent.GetEventSubjectItems = function () { }; groupEvent.RequaredFields = function () { var a = new Boolean(true); if ($("#txtGroupEventDate").val() == "") { $("#txtGroupEventDate").addClass("ui-state-error").focus(); a = false; return false } else { $("#txtGroupEventDate").removeClass("ui-state-error", 100); a = true } if ($("#ddlTrainingEventType").val() == "0") { $("#ddlTrainingEventType").addClass("ui-state-error").focus(); a = false; return false } else { $("#ddlTrainingEventType").removeClass("ui-state-error", 100); a = true } return a };groupEvent.TrainingEventGroup_Save = function (a, b) { if (b.length != 0) { var c = new Array; try { for (var d = 0; d < a.length; d++) { c.push({ TrainingEventCategory_ID: a[d], TrainingEventType_ID: $("#ddlTrainingEventType").val() }) } var e = { TrainingEventTypeID: $("#ddlTrainingEventType").val(), TrainingEventDate: $("#txtGroupEventDate").val(), TrainingEventRemarks: $("#editRemarks").val(), UserFullName: $("#hidFullName").val() }; var f = { TrainingEvent2PersonCollection: b, TrainingEventCategoryCollection: c, TrainingEvents: e }; PQ.Admin.WebService.EventRecords.TrainingEventGroup_Save(f, function (a) { if (a) { $("#dialogSuccessMessage").dialog({ autoOpen: true, resizable: true, closeOnEscape: true, modal: true, height: 150, open: function (a, b) { $("#lblSuccessMessage").text($("#hidSaveSuccessMessage").text()) }, buttons: { Ok: function () { $(this).dialog("destroy"); location.href = "/opeReady/Default.aspx" } } }) } $("#waitplease").css({ display: "none" }) }, function (a) { $("#waitplease").css({ display: "none" }); return false }) } catch (g) { } } else { setTimeout(function () { $("#waitplease").css({ display: "none" }); RaiseWarningAlert($("#hidNoPersonInEvent").text()) }, 500) } };